{"Asset":{"orsh9m88wgot32jy":{"_id":"orsh9m88wgot32jy","source":"themes/light/source/fancybox/blank.gif","mtime":1398413418000},"kogwkz3mfbtikad4":{"_id":"kogwkz3mfbtikad4","source":"themes/light/source/fancybox/fancybox_loading.gif","mtime":1398413418000},"c44818ln4pnc0iwp":{"_id":"c44818ln4pnc0iwp","source":"themes/light/source/fancybox/fancybox_loading@2x.gif","mtime":1398413418000},"oir2ljyebo2haxdu":{"_id":"oir2ljyebo2haxdu","source":"themes/light/source/fancybox/fancybox_overlay.png","mtime":1398413418000},"qxkhlmu8ugrfp0kg":{"_id":"qxkhlmu8ugrfp0kg","source":"themes/light/source/fancybox/fancybox_sprite.png","mtime":1398413418000},"61sz8kwpmxtoa2t0":{"_id":"61sz8kwpmxtoa2t0","source":"themes/light/source/fancybox/fancybox_sprite@2x.png","mtime":1398413418000},"i5m328lbwhkf9z50":{"_id":"i5m328lbwhkf9z50","source":"themes/light/source/fancybox/jquery.fancybox.css","mtime":1398413418000},"0t2t8gdn5jpcir0p":{"_id":"0t2t8gdn5jpcir0p","source":"themes/light/source/fancybox/jquery.fancybox.pack.js","mtime":1398413418000},"pjy6nces197qif7b":{"_id":"pjy6nces197qif7b","source":"themes/light/source/js/gallery.js","mtime":1398413418000},"81sfdxx67vctul8i":{"_id":"81sfdxx67vctul8i","source":"themes/light/source/js/jquery.imagesloaded.min.js","mtime":1398413418000},"xjj7yeduv6tts7bw":{"_id":"xjj7yeduv6tts7bw","source":"themes/light/source/css/style.styl","mtime":1398413418000},"51thqv4mkitxsih0":{"_id":"51thqv4mkitxsih0","source":"themes/light/source/css/font/fontawesome-webfont.eot","mtime":1398413418000},"kkfj42r1pltvghhh":{"_id":"kkfj42r1pltvghhh","source":"themes/light/source/css/font/fontawesome-webfont.svg","mtime":1398413418000},"d3yvx5n2nfn4kcvf":{"_id":"d3yvx5n2nfn4kcvf","source":"themes/light/source/css/font/fontawesome-webfont.ttf","mtime":1398413418000},"h1js7fe97zsna6gx":{"_id":"h1js7fe97zsna6gx","source":"themes/light/source/css/font/fontawesome-webfont.woff","mtime":1398413418000},"awwg6ka7fenc1o73":{"_id":"awwg6ka7fenc1o73","source":"source/CNAME","mtime":1398413418000},"jd9du28y7sbgq8tv":{"_id":"jd9du28y7sbgq8tv","source":"source/uploads/2012/03/Pig.180x180-150x150.jpg","mtime":1398413418000},"gucysgd8r21o4ixi":{"_id":"gucysgd8r21o4ixi","source":"source/uploads/2012/03/Pig.180x180.jpg","mtime":1398413418000},"llwj161kl016m0t6":{"_id":"llwj161kl016m0t6","source":"source/uploads/2012/09/board-300x86.jpg","mtime":1398413418000},"5suxvnvb89gisynn":{"_id":"5suxvnvb89gisynn","source":"source/uploads/2012/09/board.jpg","mtime":1398413418000},"nut4m0xc8693c6i9":{"_id":"nut4m0xc8693c6i9","source":"source/uploads/2012/09/butterfly-300x86.jpg","mtime":1398413418000},"i2yw7ugnirymymvb":{"_id":"i2yw7ugnirymymvb","source":"source/uploads/2012/09/butterfly.jpg","mtime":1398413418000},"d4v72n5yaezsnbsp":{"_id":"d4v72n5yaezsnbsp","source":"source/uploads/2012/09/houhai-3-300x86.jpg","mtime":1398413418000},"0lhmihw785rep8w3":{"_id":"0lhmihw785rep8w3","source":"source/uploads/2012/09/houhai-3.jpg","mtime":1398413418000},"8acd7fhz1atrar5z":{"_id":"8acd7fhz1atrar5z","source":"source/uploads/2012/09/sunset-300x86.jpg","mtime":1398413418000},"pf0y7npk4rutpt6e":{"_id":"pf0y7npk4rutpt6e","source":"source/uploads/2012/09/sunset.jpg","mtime":1398413418000},"t40d5l0phxunlwjn":{"_id":"t40d5l0phxunlwjn","source":"source/uploads/2012/09/wish-300x86.jpg","mtime":1398413418000},"2o818gkabqh0naey":{"_id":"2o818gkabqh0naey","source":"source/uploads/2012/09/wish.jpg","mtime":1398413418000},"y39fwe0eu52t09qb":{"_id":"y39fwe0eu52t09qb","source":"source/uploads/2012/10/Liu-Jis-Resume-223x300.jpg","mtime":1398413418000},"pp1dxvz2e7763d91":{"_id":"pp1dxvz2e7763d91","source":"source/uploads/2012/10/Liu-Jis-Resume-CN-232x300.jpg","mtime":1398413418000},"yha4puw6syqiihbw":{"_id":"yha4puw6syqiihbw","source":"source/uploads/2012/10/Liu-Jis-Resume-CN.jpg","mtime":1398413418000},"8umyug97r7yd809g":{"_id":"8umyug97r7yd809g","source":"source/uploads/2012/10/Liu-Jis-Resume.jpg","mtime":1398413418000},"srykatic5m21ow6f":{"_id":"srykatic5m21ow6f","source":"source/uploads/2013/01/DSC00157-s-150x150.jpg","mtime":1398413418000},"vknzdngg8qpo6za9":{"_id":"vknzdngg8qpo6za9","source":"source/uploads/2013/01/DSC00157-s.jpg","mtime":1398413418000},"bo85wqepewvq6mv7":{"_id":"bo85wqepewvq6mv7","source":"source/uploads/2013/01/DSC00295-s-150x150.jpg","mtime":1398413418000},"yzbpqkxwc2lt2yok":{"_id":"yzbpqkxwc2lt2yok","source":"source/uploads/2013/01/DSC00295-s.jpg","mtime":1398413418000},"d97ymczak8rtw97m":{"_id":"d97ymczak8rtw97m","source":"source/uploads/2013/01/DSC00783-150x150.jpg","mtime":1398413418000},"bbr3ji9b9e1awizn":{"_id":"bbr3ji9b9e1awizn","source":"source/uploads/2013/01/DSC00783.jpg","mtime":1398413418000},"ktcyfzzdll8k9ihr":{"_id":"ktcyfzzdll8k9ihr","source":"source/uploads/2013/01/DSC00908-150x150.jpg","mtime":1398413418000},"6po3p52n2ma04uh4":{"_id":"6po3p52n2ma04uh4","source":"source/uploads/2013/01/DSC00908.jpg","mtime":1398413418000},"atpvgnyyag0ct11e":{"_id":"atpvgnyyag0ct11e","source":"source/uploads/2013/01/DSC00975-s2-150x150.jpg","mtime":1398413418000},"wxoxavqkirfbct53":{"_id":"wxoxavqkirfbct53","source":"source/uploads/2013/01/DSC00975-s2.jpg","mtime":1398413418000},"mqv1y42iozbdz2yp":{"_id":"mqv1y42iozbdz2yp","source":"source/uploads/2013/03/DSC01076-150x150.jpg","mtime":1398413418000},"riabk1gjxjcpaowd":{"_id":"riabk1gjxjcpaowd","source":"source/uploads/2013/03/DSC01076.jpg","mtime":1398413418000},"qh5tv64j1wxvcai9":{"_id":"qh5tv64j1wxvcai9","source":"source/uploads/2013/04/naughty.gif","mtime":1398413418000}},"Cache":{"tam9h2978tjc6x0t":{"_id":"tam9h2978tjc6x0t","content":"title: About Jim\nlayout: page\ndate: 2012-03-05 13:23:12\n---\n\n[![](/uploads/2012/03/Pig.180x180-150x150.jpg \"猪头180x180\")](/uploads/2012/03/Pig.180x180.jpg)\n\n大名：刘骥\n\n洋名：Jim\n\n花名：吉姆、吉姆刘、吉姆牛、骥母牛、母牛、刘指导……\n\n旧博客：[http://jimnox.cnblogs.com](http://jimnox.cnblogs.com)\n\nGeek程序猿一名，现在北京西二旗一座中国贫富差距最大的大楼里为首富写码，主攻Mobile Web。\n\n性别男，爱好女。性格奇葩，普文二都沾点边，看具体干什么了。\n\n好吧，就这样吧……\n","mtime":1398413418000,"source":"about/index.md"},"najz72p1ojpnd5xo":{"_id":"najz72p1ojpnd5xo","content":"title: \"Jim Plays <Eyes On Me>\"\ndate: 2014-03-16 15:36:20\ntags: \n- 音乐\n---\n\n听了10年的歌，能够自己弹出来，虽然节奏和力度各种不稳，但是还是很高兴。\n中间有一个明显的换踏板失误，是录了MIDI后期修的。\n\n**视频+手机观看：**[优酷](http://v.youku.com/v_show/id_XNjg1OTMyMzQw.html)\n**MP3+高清下载：**[百度网盘](http://pan.baidu.com/share/link?shareid=3502137796&uk=1359475634)\n\n<embed src=\"http://player.youku.com/player.php/sid/XNjg1OTMyMzQw/v.swf\" allowFullScreen=\"true\" quality=\"high\" width=\"480\" height=\"400\" align=\"middle\" allowScriptAccess=\"always\" type=\"application/x-shockwave-flash\"></embed>\n\n**设备&&软件：**\n键盘：Casio PX135\n音源：The Grand 2\n摄像：SONY NEX-6 E50/1.8\n编辑：SONY Vegas","mtime":1398413418000,"source":"_posts/eyes-on-me.md"},"toir5ms4go3iolep":{"_id":"toir5ms4go3iolep","content":"title: \"世界，你好！\"\nid: 1\ndate: 2012-03-05 13:23:12\ntags: \n- 未分类\n---\n\n欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！","mtime":1398413418000,"source":"_posts/hello-world.md"},"f1ant1sb9jd2tfva":{"_id":"f1ant1sb9jd2tfva","content":"title: \"JavaScript中的高精度计时\"\nlayout: post\ndate: 2014-3-16 19:23:12\ntags: \n- 编程\n---\n\nHRT(High Resolution Timing, 高精度计时)在一些场合有很大的作用，比如游戏开发中，需要精确的计算两帧之间的时间差。\n\n在JS中常常用`(new Date()).getTime()`来获取毫秒级的时间戳，虽然是毫秒级，但事实上它的真实精度只能达到大概16ms的级别。例如\n```\nwhile (true){\n  console.log((new Date()).getTime()); // 这样死循环浏览器会跪的，责任自负\n}\n```\n会发现它事实上大概16ms才跳一次，也许是17ms、又或者15ms吧，反正实际精度是有限的——什么？你跟我说是1ms？我告诉你那是因为新的系统或者浏览器使用了更高精度——但这不影响这篇文章的内容……\n\n这对于日常应用来说完全够用了，但是对于游戏这样的场合，高精度计时就有它不可取代的意义了。\n\n<!-- more -->\n\n### 故事从这里开始\n\n上面的获得毫秒级时间戳的方式之所以精度有限，是因为它的实现方式，以及它“绝对时间”的定义。\n以Windows为例，这一类时间戳所使用的系统调用，比如`GetSystemTime()`[MSDN](http://msdn.microsoft.com/en-us/library/windows/desktop/ms724390.aspx)、`GetTickCount()`[MSDN](http://msdn.microsoft.com/en-us/library/windows/desktop/ms724408.aspx)，其函数的取值并不是实时的，而是通过硬件的**时钟中断**被动刷新的，这里的刷新间隔“正好”就是上面那个16ms。以`GetSystemTime()`为例，它返回的是`SYSTEMTIME`结构体，**这用来进行时间日期处理的，因为时间日期处理通常根本不需要也不应该用那么高的精度（甚至很多时候只需要秒级别的精度）**，所以`(new Date()).getTime()`通过它们实现的确是可以胜任的。\n\n### 现在我们明白了，靠这个时间戳是不能实现高精度计时的。\n\n在Windows上，常常有两种高精度计时的方式：\n第一种是`timeGetTime()`[MSDN](http://msdn.microsoft.com/en-us/library/ms713418.aspx)，它能返回系统启动到现在所经过的毫秒数，精度是1ms，因为它是32位的，所以大概49.71天会溢出清零。\n第二种`QueryPerformanceCounter()`配合`QueryPerformanceFrequency()`[MSDN](http://msdn.microsoft.com/en-us/library/windows/desktop/ms644904.aspx)实现，能够实现微秒级别的计时精度，对于大多数场合而言都够了。\n当然还有更先进的方法，是通过CPU中的硬件计数器，和CPU每个时钟周期的时间，计算出更精确的时间（通常是纳秒级别的），对精度要求极高的场合这是最精确的选择了。\n\n通常在使用固定位数的情况下，精度越高意味着计时的范围越小，这就不罗嗦了。\n\n### 回到JavaScript中来\n\n上面那些乱七八糟系统调用其实更咱们都没什么太大关系，我们能干什么完全看运行环境乐意给什么。\n在**webkit**中提供了`performance.now()`[参考文献](http://updates.html5rocks.com/2012/08/When-milliseconds-are-not-enough-performance-now)来获取一个毫秒级的浮点数时间戳，我没查到资料它的有效精度是多少，不过既然给了个浮点数那就这么用着吧，我们就当它是微秒级的了！\n在**node.js**中，有`process.hrtime()`[DOC](http://nodejs.org/api/process.html#process_process_hrtime)，返回的是一个数组`[seconds, nanoseconds]`，看起来它具有纳秒级别的精度？且信了吧。\n\n### 综合一下，我写了下面的代码\n```\nexports.time = (function(){\n  if (typeof window !== 'undefined'){\n    // 浏览器\n    if (typeof window.performance !== 'undefined' && typeof performance.now !== 'undefined'){\n      // support hrt\n      return function(){\n        return performance.now();\n      };\n    }else{\n      // oh no..\n      return function(){\n        return (new Date()).getTime();\n      };\n    }\n  }else{\n    // node.js\n    return function(){\n      var diff = process.hrtime();\n      return (diff[0] * 1e9 + diff[1]) / 1e6; // nano second -> ms\n    };\n  }\n})();\n```\n\n有了上面的代码[(gist)](https://gist.github.com/LiuJi-Jim/9596920)，我们就能写一个秒表神马的，在做性能测试的时候就用得上了。\n\n最后还是要唠叨一句，**HRT是用来计算时间差的，不是用来计算现实中时间（挂钟时间）的**。\n\n下一篇文章中，将会对JS中的时间精度进行进一步的讨论，对象自然就是`setTimeout/setInterval`了！\n\n### 参考文献\n\n1. http://www.cppblog.com/sunraiing9/archive/2006/12/14/16415.html\n2. http://blog.csdn.net/hax/article/details/1449403\n3. http://blog.csdn.net/aimingoo/article/details/1451556\n","mtime":1398413430000,"source":"_posts/hrt-in-js.md"},"s460lm7amin1bekr":{"_id":"s460lm7amin1bekr","content":"title: \"HTC One 半月谈\"\nid: 362\ndate: 2013-08-31 09:41:08\ntags: \n- 站着说话不腰疼\n- 生活\n---\n\n说买咱就买啊，你买我买全都买啊——跟着唱起来了有木有\n\n消费真是好东西，心情好的时候可以，心情不好的时候也可以。趁着心情不好，买了一手机……\n\n咳咳，言归正传。\n\n8月16号HTC One到手，到今天整好两周，谈谈。\n<!--more-->\n\n## 硬件方面\n\n毕竟算不上新机型了，硬件方面相信大家都比较了解了，我主要就几个比较敏感的话题说说。\n\n屏幕非常漂亮，像素密度很高，色彩也不错，缺点就是玻璃吸收指纹和油脂很厉害，这一点我手上的iPhone 4S就好多了，同一时间操作，iPhone明显更干净一些，而One的玻璃则总是得找个衣服角蹭蹭蹭。\n\n屏幕右下角有一点点漏光，一方面是背光从屏幕边上的缝漏出，另一方面似乎是HOME键的背光会漏到屏幕里面去，不过需要在黑的地方才能看出来，比如被窝、楼道，这种时候我基本上狗眼已瞎，凑合凑合用吧。\n\n白天屏幕表现良好，这块屏幕的亮度是相当不错的，有个问题是亮度条件只能全手动或全自动，而iOS是可以在手动的基础上+自动的。所幸这个光线感应器是比较积极也比较准确的，基本能随时适应环境光变化。\n\n摄像头基本没法用啊，只要一开就想摔机器。首先是白平衡有很大的问题，偏紫，TMD蓝天白云能给我拍成紫的你说能不摔么？然后就是像素低终究还是个问题，分辨率明显不够，也经不起裁图。\n\n附带说一下底下那个HTC标识不是按键，真的是脑残得无组织无纪律了，每次手指碰着它我都想摔机器。\n\n再尼玛P.S.一下，没有静音键好难受啊，直接造成多次会议时铃声响起，而在用iPhone的时候这种事情从未发生过一次。\n\n## 重点说说软件吧\n\n系统是4.2，加上这样好的配置，可以说系统本身非常非常流畅，这让我这种之前只用过Android 2.3的土鳖瞬间有涨姿势了的感觉——瓦里个去？原来Android也可以这么流畅？\n\n但是（往往听到这个词的时候，一件好事总会变成坏事），Android这个平台上面的软件品质真的是堪忧。\n\n脑残的Android竟然把创建快捷方式这种权限开放给应用，真是找死，装个软件就头疼删它的快捷方式，太烦躁。\n\n缺乏一个统一的对通知的权限管理机制，这一点iOS做的非常好，在弹窗、通知中心、角标等几个简单的维度上面，有一个统一的控制中心，可以一目了然地对所有App的通知权限进行管理。这样App多了也不会造成通知噩梦。你要知道强迫症每天清通知是一件多么费力的事情！！！\n\n没有iCloud这样的无脑（非贬义词）同步机制，不过通过百度云比较好地解决了照片同步上传这个大问题，给百度云点个赞，不过没解决照片同步下载到手机上的问题，当然这样的需求相比上传来说次要多了。同时我突然意识到为啥很多人喜欢用Evernote，是特么因为iOS上的便签直接就有iCloud啊，就写几个字哪还需要Evernote，起码我自己没有编辑富文本的需求。\n\n除了系统和ROM本身各种奇怪的问题以外，各种App更是遭不住。\n\n**虾米音乐**，对这货我绝对是爱之深恨之切。切个歌要好几秒钟，点快了的话还经常强退，作死！还有些奇怪的BUG，比如在播放网络歌曲时，切换应用后再回来，必然会跳到列表界面。除此之外完全没法忍的是：听的时候拔掉耳机还居然特么的响一声才自动暂停（系统自带的播放器没这问题），这种BUG虾米的人会觉得大丈夫？这是要让我把iPhone揣兜里听歌的节奏吗？虾米对我是必须的因为他的资源优势明显……\n\n**QQ阅读**，翻页效果卡的要死，这真的是4核机器？QQ阅读开发用手机得有多强悍才能流畅……我果断把翻页效果调成简单版的了，真掉价。另外，我在iOS上的QQ阅读买的书，在Android上居然不能同步，QQ你丫的强账号体系被狗吃了？再买Kindle之前，这种第三方内容平台我绝对不会再消费了。\n\n**微信**、**QQ**、**Fuubo**……这些家伙的通知都不会点亮屏幕，除了QQ的通知铃声比较特殊能分辨出来，其他的App来了通知我都得自己点亮屏幕来看一眼，极其蛋碎。\n\nHTC的这个系统的多任务管理有很奇怪的问题，就是我在一些App里点了“退出”，在多任务管理界面上已然能看见这个App，图片是退出之前的快照；而点进去则发现App很明显是重启了一次，蛋疼。\n\n更别说连电脑了，某次我开了USB调试，结果电脑上某些流氓软件三下两下把我的手机搞个天翻地覆，让人直接骂娘，果断关之。\n\n我相信**HTC Sense**的“精髓”就特么在于**天气时钟**上了，桌面上一个天气时钟，Blink Feed上一个天气时钟，尼玛应用抽屉里还有一个天气时钟，摔……\n\n## 各种吐槽也就差不多了，说一些有趣的地方吧\n\n电视机遥控器功能：这个功能本身是极其蛋疼的，不过配合内容管理就有点意思，它可以收到歌华的节目单（我家里用的歌华），你可以订一个喜欢看的节目，会帮你设一个提醒，到时间了只要一键切换就会帮你遥控机顶盒换台了。\n\nGmail良心，比iOS上的邮件的确是好用一些。不过我一直不知道怎么配推送，系统自带的邮件客户端可以推送但是不喜欢用。另外系统自带邮件客户端一个明显的缺点是通知中心里面只有“归档”、“回复”、“转发”这类的按钮，我特么最需要的是“标记为已读”谢谢……而且好像他是五分钟同步一次，而不是推送？反正相比之下旁边的iPhone用Exchange总是会更及时地收到Gmail，不知道这机器怎么搞推送，谁能教教我。\n\n朋友送了我一个NFC+蓝牙小音箱，挺好玩，NFC磕一下，会自动开启蓝牙配对，成功后就会打开系统自带的播放器开始放歌了，小音箱上还有音量控制、播放控制键可以遥控手机（似乎只对自带播放器有效）。而iPhone这里没NFC所以只能手工蓝牙配对了，可玩性就没得比。\n\n没Root，因为这机器Root实在太麻烦了，要先解锁（这一步会清空手机，那还搞毛？），然后刷个什么Recovery，然后才能Root。相比之下iOS上越狱就几分钟的事情……当然得等大神们来搞。\n\n越狱之后的iOS就很NB了，Activator这货我觉得已经快成为我使用手机的标配方法了，离不开啊离不开，还有KB Shotcuts、Landscape Video这种非常方便的插件……咦怎么跑题了，咳咳我只是想说Android所标榜的高可定制，感觉起来其实也不过如是啊。\n\n## 结论时间\n\n半个月来有过多少次摔机器的冲动，尤其是打开相机的时候，尤其是用虾米切歌的时候，还有回到家拔出耳机的那一刹那，欲仙欲死。最终觉得Android能卖这么好，原因就是机器选择多，反观iPhone则只有黑白两个选择而已，完全没法满足个性化需求嘛……其实我买这台手机完全就只是想换个口味儿玩玩，（结果玩脱了吧……）\n\n这下我真心想做苹果的脑残粉怎么办？现在我很想买下个月的iPhone 5S了，求打醒。\n","mtime":1398413418000,"source":"_posts/htc-one-半月谈.md"},"mx6r9y8ic72rajua":{"_id":"mx6r9y8ic72rajua","content":"title: \"IE对GIF动画的一个BUG\"\nid: 320\ndate: 2013-03-02 23:04:04\ntags: \n- 编程\n---\n\n正文开始之前不得不说：GIF真的是个灭绝人性的东西，为什么——可以从[我的另一篇博客](/2012/06/04/伪转载-gif速度的那些事儿/ \"[伪转载]GIF速度的那些事儿\")里看到一点点。\n\n最近的一个项目中发现GIF动画在某些版本的IE里经常无故停止。\n<!-- more -->\n\n有简单地查了一下，据说GIF动画用作CSS background时，IE里容易不动，于是乎我给改成了`<img>`，没有明显的效果，说明这个说法是站不住脚的，至少并不是根本成因。由于忙于开发，没有功夫仔细推敲成因，一直只是觉得很诡异。\n\n后来终于开发的差不多了，才重点想这个问题。一天晚上肚子疼的厉害，无心写码，就在那开着程序瞎点，突然发现当在程序里切换TAB的时候，GIF动画就会停止，BUG出现时机非常准确。\n\n于是一条线上网找原因，一条线观察这部分代码。\n\nGoogle之下在[Stack Overflow](stackoverflow.com/questions/780560/animated-gif-in-ie-stopping)看到一类似问题，里面就有提到在IE里`beforeunload`事件会掐断GIF。瞬间恍然大~~雾~~悟，以前一直知道`beforeunload`会掐断所有Ajax请求，并没有把它和GIF关联在一起考虑。\n\n部分原文：\n> IE assumes that the clicking of a link heralds a new navigation where the current page contents will be replaced. As part of the process for perparing for that it halts the code that animates the GIFs. I doubt there is anything you can do about it (unless you aren't actually navigating in which case use return false in the onclick event).\n\n马上观察代码发现，TAB切换用的是`<a href=\"javascript:void(0);\">`，因为protocol不同，是会触发`beforeunload`的。对这里的`<a>`加上了`stopPropagation`和`preventDefault`，可怜的GIF果然没被掐断。\n\n由于是一个SPA程序，大量地使用了`<a>`做按钮，到处改毕竟麻烦，所以简单地\n``` javascript\n$('body').delegate('a[href^=javascript]', 'click', function(e){\n    e.stopPropagation();\n    e.preventDefault();\n});\n```\n虽然比较暴力，而且未必能解决所有问题，不过好歹还是快速简单有效地遏制了这个倒霉的问题。\n\n弦外之音：一直比较认为`javascript:void(0);`是目前环境下的最佳实践，并反对使用`#`（因为hash对于SPA做路由是很有用的），而不写`href`则会造成IE旧版本上`:hover`和`:active`伪类失效，于是乎现在看来`javascript:void(0);`并不能完全胜任，还是禁止事件冒泡和默认行为最靠谱。","mtime":1398413418000,"source":"_posts/ie对gif动画的一个bug.md"},"mt5fnuz245deejqc":{"_id":"mt5fnuz245deejqc","content":"title: \"\\\"javascript:void(0);\\\"是个好选择吗？\"\nid: 345\ndate: 2013-04-13 01:31:05\ntags: \n- 编程\n---\n\n在[上一篇文章](/2013/03/02/ie对gif动画的一个bug/ \"IE对GIF动画的一个BUG\")中，提到了因为`onbeforeunload`事件造成浏览器进行中的请求被挂断的问题，这篇算是一个扩展。\n<!-- more -->\n\n在网页中我们常用`<a href=\"javascript:void(0);\"> ... </a>`（包括其变种如`javascript:`等）来做一个“不会跳转”的超链接，而这个a标签通常会长得像一个按钮，或者充当了按钮的功能。\n\n先抛开BUG不说，从语义上讲，a标签来做按钮是不合适的。但这么做其实是处于历史原因：在IE6或更古董的浏览器中，`:hover`等广泛应用的伪类只对a标签生效。悬浮态、点击态对于按钮来说是非常重要的，但如果用JS来实现这事就有点蛋B，杀鸡用牛刀了，于是为了图便宜，大家都采用`a`加上各种样式来充当按钮功能。\n\n时间一长，按钮的点击很多不会是页面跳转了，而是页面内交互。这时候问题来了：a标签一点击，页面跳走了，没得玩儿了。于是强需求“不会跳转的a标签”，使用事件机制阻止浏览器默认行为当然是很好的，但是毕竟要手工操作，容易漏，再加上前端捉襟见肘的代码量，似乎这种正经方法不怎么遭人待见。\n\n结果容易的方法当然还是被人找出来了，起先是`onclick=\"return false;\"`，没啥问题，可咱不是不提倡写内联事件绑定么？于是有了`href=\"#\"`，时间一长，发现hash是很有用的，比如可以用来做历史记录，当然还有它本来的页面定位的作用，而且这容易造成页面跳到最顶上去，于是这样的a标签虽然不会跳转页面，但其实是有破坏性的。后来不知道是谁发明了本文的猪脚：`javascript:void(0);`可谓惊为天人，后续为了省几个字符所扩展的都算不上啥，由于其较小的破坏性和非常便捷的用法，一度成为比较公认的最佳实践。\n\n基本上来说这没太大问题，缺点就是因为`javascript:`这个protocol是会触发`onbeforeunload`事件，从而引发一连串不必要的麻烦。\n\n那么，~~哪里才能买得到呢~~怎么才是真正的最佳实践呢？\n\n我觉得有三种选择：\n\n1.  只要是不跳走的，就坚决不用a标签做按钮，然后让IE6玩儿蛋去。\n2.  保证对每个按钮性质的a标签都阻止浏览器默认事件行为。\n3.  用事件代理，在`body`上捕获所有a标签的点击事件，判断其`href`并阻止浏览器默认行为。\n\n2麻烦\n3可能受阻止冒泡的影响\n教练，我想选1\n![](/uploads/2013/04/naughty.gif \"吐舌头\")\nLoL","mtime":1398413418000,"source":"_posts/javascriptvoid0是最佳实践吗？.md"},"jqelh4icd07x5vl5":{"_id":"jqelh4icd07x5vl5","content":"title: \"JavaScript中的异步梳理（0）\"\nid: 12\ndate: 2012-04-23 23:13:52\ntags: \n- 编程\n---\n\nJavaScript中有大量异步操作，首先可以看看JS中什么东西会产生异步（这里先只考虑浏览器里的情况）：\n\n* Ajax（XMLHttpRequest）\n* Image Tag，Script Tag，iframe（原理类似）\n* setTimeout/setInterval\n* CSS3 Transition/Animation\n* postMessage\n* Web Workers\n* Web Sockets\n* and more...\n\n实际上在我自己的理解中，任何“在未来不确定的时间发生”的事情都可以理解为异步，因此各种DOM事件也可以用类似的方式去理解和处理。\n\n异步是JS中的重要话题，Ajax和Node.JS出现以后更是让JS中的异步编程提升到了一个前所未有的高度。\n\n但是对于异步+回调①的模式，当需要对一系列异步操作进行流程控制的时候似乎必然会面临着回调嵌套。因此怎么把异步操作“拉平”，用更好的方法去优化异步编程的体验，同时也写出更健壮的异步代码，是这两年来前端圈子里很火的话题。\n\n我大概总结一下，对异步操作的优化，总的来说有3种流派：\n\n1. 消息驱动——代表：[@朴灵](http://weibo.com/shyvo) 的[EventProxy](https://github.com/JacksonTian)\n2. Promise模式——代表：[CommonJS Promises](http://wiki.commonjs.org/wiki/Promises)，[jQuery](http://www.jquery.com)，[Dojo](http://dojotoolkit.org/)\n3. 二次编译——代表：[@老赵](http://weibo.com/jeffz) 的[Jscex](https://github.com/JeffreyZhao/jscex)\n\n这个系列将会分别介绍这三种模式，以及我本人根据自身需要对它们进行的取舍。其中1和2会是重点。\n<!--more-->\n\n** 目录：**\n[JavaScript中的异步梳理（1）——使用消息驱动](/2012/05/28/javascript中的异步梳理（1）-使用消息驱动/ \"JavaScript中的异步梳理（1）——使用消息驱动\")\n[JavaScript中的异步梳理（2）——使用Promises/A](/2012/06/28/javascript中的异步梳理（2）-使用promisesa/ \"JavaScript中的异步梳理（2）——使用Promises/A\")\n[JavaScript中的异步梳理（3）——使用Wind.js](/2012/09/27/javascript中的异步梳理（3）-使用wind-js/ \"JavaScript中的异步梳理（3）——使用Wind.js\")\n\n①：异步不一定非要回调，比如Wind.js就用了一种非常巧妙的二次编译方式来让代码可以“顺序编写、异步执行”，不再需要无尽的回调。","mtime":1398413418000,"source":"_posts/javascript中的异步梳理（0）.md"},"77d2yulyrz4mryb4":{"_id":"77d2yulyrz4mryb4","content":"title: \"JavaScript中的异步梳理（1）——使用消息驱动\"\nid: 27\ndate: 2012-05-28 11:09:07\ntags: \n- 编程\n---\n\n继续[上一篇文章](/2012/04/23/javascript中的异步梳理（0）/ \"JavaScript中的异步梳理（0）\")，这篇探讨使用消息驱动来优化异步编程体验。\n\n先举一个例子，如果希望`ABCDE`这5个函数依次执行，我们可以写出如下代码。\n<!-- more -->\n``` javascript\nA();\nB();\nC();\nD();\nE();\n```\n在同步的情况下，这样的代码没有任何问题。但如果ABCDE都是异步的，还需要按次序执行，这样写就不行了。通常我们会为异步函数设置回调，当函数执行完的时候执行回调，例如\n``` javascript\nA(function(){\n    B(function(){\n        C(function(){\n            D(function(){\n                E();\n            });\n        });\n    });\n});\n```\n毫无疑问这样的编程体验是很差的。当异步流复杂的时候回调嵌套层数会很多，完全就是一场噩梦。\n\n这还不是最重要的，如果想表达“当AB都完成的时候执行C”这样的流程，并且希望A/B可以并行，就不能简单的用这样的回调了。\n虽然说“当AB都完成的时候执行C”可以通过设置一个布尔量来解决，但是“当ABCD都完成的时候执行E”这样的逻辑就需要在每个函数执行完的时候去判断其他函数是否执行完，虽然的确是可行的，但是编程体现是比较差的。\n\n身为一名懒惰的程序员，这样显然满足不了我们的胃口。\n\n[@朴灵](http://weibo.com/shyvo) 写了一个[EventProxy](https://github.com/JacksonTian)，提供了事件驱动的异步编程体验\n``` javascript\nvar proxy = new EventProxy();\nproxy.assign('A', function(){\n    B(function(){\n        proxy.trigger('B');\n    });\n});\nproxy.assign('B', function(){\n    C(function(){\n        proxy.trigger('C');\n    });\n});\nproxy.assign('C', function(){\n    D(function(){\n        proxy.trigger('D');\n    });\n});\nproxy.assign('D', function(){\n    E();\n});\nA(function(){\n    proxy.trigger('A');\n});\n```\n可以看出通过消息来驱动代码可以让异步嵌套被“拉平”了，而如果要描述“当ABCD都完成的时候执行E”这样的流程也很容易了\n``` javascript\nvar proxy = new EventProxy();\nproxy.assign('A', 'B', 'C', 'D', E);\nA(function(){\n    proxy.trigger('A');\n});\nB(function(){\n    proxy.trigger('B');\n});\nC(function(){\n    proxy.trigger('C');\n});\nD(function(){\n    proxy.trigger('D');\n});\n```\n除了改善异步编程体验以外，EventProxy也可以提供一个自定义的事件系统。\n\nEventProxy很简单，源代码只有300多行，但是对于我这样的移动开发者来说任何用不上的代码都是负担。\n由于我自己将Event系统拆成了单独的一个模块，而我（目前为止）也不需要EventProxy在`trigger`一个消息的时候的参数传递的功能，对于`some`, `any`, `not`这些限定词我也不需要，因此我自己实现了一个简单版的异步流控制工具。\n``` javascript\n(function(export){\nvar uid = 1;\nvar Jas = function(){\n    this.map = {};\n    this.rmap = {};\n};\nvar indexOf = Array.prototype.indexOf || function(obj){\n    for (var i=0, len=this.length; i<len; ++i){\n        if (this[i] === obj) return i;\n    }\n    return -1;\n};\nvar fire = function(callback, thisObj){\n    setTimeout(function(){\n        callback.call(thisObj);\n    }, 0);\n};\nJas.prototype = {\n    waitFor: function(resources, callback, thisObj){\n        var map = this.map, rmap = this.rmap;\n        if (typeof resources === 'string') resources = [resources];\n        var id = (uid++).toString(16); // using hex\n        map[id] = {\n            waiting: resources.slice(0), // clone Array\n            callback: callback,\n            thisObj: thisObj\n        };\n\n        for (var i=0, len=resources.length; i<len; ++i){\n            var res = resources[i],\n                list = rmap[res] || (rmap[res] = []);\n            list.push(id);\n        }\n        return this;\n    },\n    trigger: function(resources){\n        if (!resources) return this;\n        var map = this.map, rmap = this.rmap;\n        if (typeof resources === 'string') resources = [resources];\n        for (var i=0, len=resources.length; i<len; ++i){\n            var res = resources[i];\n            if (typeof rmap[res] === 'undefined') continue;\n            this._release(res, rmap[res]); // notify each callback waiting for this resource\n            delete rmap[res]; // release this resource\n        }\n        return this;\n    },\n    _release: function(res, list){\n        var map = this.map, rmap = this.rmap;\n        for (var i=0, len=list.length; i<len; ++i){\n            var uid = list[i], mapItem = map[uid], waiting = mapItem.waiting,\n                pos = indexOf.call(waiting, res);\n            waiting.splice(pos, 1); // remove\n            if (waiting.length === 0){ // no more depends\n                fire(mapItem.callback, mapItem.thisObj); // fire the callback asynchronously\n                delete map[uid];\n            }\n        }\n    }\n};\nexport.Jas = Jas; // Jas is JavaScript Asynchronous (callings) Synchronizer\n})(window);\n```\n使用起来也挺简单\n``` javascript\nvar flow = new Jas();\nflow.waitFor(['A', 'B'], function(){\n    // both A and B are done!!\n});\n\n$.getJSON(url1, function(data){\n    // An ajax request\n    flow.trigger('A');\n});\n$.getJSON(url2', function(data){\n    // Another ajax request\n    flow.trigger('B');\n});\n```\n**~~小姐~~小结一下：**\n使用消息驱动的方式可以让我们在异步编程中避免一些回调嵌套的噩梦，优化编程体验，在流程有修改的时候也更加灵活，可以用一种接近“声明”式的方式去描述异步函数流。","mtime":1398413418000,"source":"_posts/javascript中的异步梳理（1）-使用消息驱动.md"},"iw0smx50urm7kn9e":{"_id":"iw0smx50urm7kn9e","content":"title: \"JavaScript中的异步梳理（2）——使用Promises/A\"\nid: 64\ndate: 2012-06-28 21:03:53\ntags: \n- 编程\n---\n\n接[上篇](/2012/05/28/javascript中的异步梳理（1）-使用消息驱动/ \"JavaScript中的异步梳理（1）——使用消息驱动\")，这篇探讨使用**CommonJS Promises/A**来管理异步操作。\n\n写在前面：本人并没有系统深入研究过Promises模型，但以解决问题为目的进行了一些尝试，本文更多围绕自己的理解写，而非规范本身。\n\n[Promises](http://wiki.commonjs.org/wiki/Promises)是一种异步编程模型，通过一组API来规范化异步操作，这样也能够让异步操作的流程控制更加容易。\n<!-- more -->\n\n这里谈的是Promises/A，算是Promises的一个分支吧，其实就是根据Promises模型定义了一组API。由于Promises对于新手而言理解曲线还是比较陡峭的，这里循序渐进的给大家介绍，同时实现一个最简单的Promises/A代码。\n\nPromises/A有个别名叫做“thenable”，就是“可以then”的。这里一个promise有三种状态：[默认、完成、失败]，初始创建的时候是默认状态，状态只可以从默认变成完成，或者默认变成失败。一旦完成或者失败，状态就不能再变。为了简化文章，这里我们先只考虑完成，不考虑失败。\n``` javascript\nvar Promise = function(ok){\n    this.state = 'unfulfilled';\n    this.ok =  || function(obj) { return obj; };\n};\nPromise.prototype = {\n    resolve: function(obj){\n        if (this.state !== 'unfulfilled') throw '已完成，不能再次resolve';\n        this.state = 'fulfilled';\n    }\n};\nvar promise = new Promise(function(obj){ return obj; });\n```\n构造函数中的`ok`是一个任务，`promise.resolve(obj)`表示将该promise的状态改为完成，此时`ok`会被执行，其返回值作为后续操作的参数以及`resolve`的返回值。\n由于没有和任何异步操作关联在一起，这里的Promise还没有任何作用。\n\nPromises/A之所以叫“thenable”是因为它的核心API叫做`then`，望文生义这个方法的作用是当一个promise完成或失败后继续干别的事情。\n\n* `then`传入一个函数作为参数`nextOK`①，当该promise被`resolve`时，`resolve`的返回值将会传递到`nextOK`中。\n* `then`返回一个promise，当上述后续操作完成时，返回的promise也会被`resolve`。\n* 如果promise的状态是已完成，则`nextOK`会被立即调用。\n\n但是这样依然无法异步，因此这里有一个特殊情况，就是**如果`nextOK`的返回值也是一个Promise，那么`then`返回的promise需要当这个promise被`resolve`时才会被`resolve`。**\n``` javascript\nvar Promise = function(ok){\n    this.state = 'unfulfilled';\n    this.ok = ok || function(obj) { return obj; };\n    this.thens = [];\n};\nPromise.prototype = {\n    resolve: function(obj){\n        if (this.state != 'unfulfilled') throw '已完成，不能再次resolve';\n        this.state = 'fulfilled';\n        this.result = this.ok(obj); // 执行ok\n\n        for (var i=0, len=this.thens.length; i<len; ++i){\n            // 依次调用该任务的后续任务\n            var then = this.thens[i];\n            this._fire(then.promise, then.ok);\n        }\n        return this;\n    },\n    _fire: function(nextPromise, nextOK){\n        var nextResult = nextOK(this.result); // 调用nextOK\n        if (nextResult instanceof Promise){\n            // 异步的情况，返回值是一个Promise，则当其resolve的时候，nextPromise才会被resolve\n            nextResult.then(function(obj){\n                nextPromise.resolve(obj);\n            });\n        }else{\n            // 同步的情况，返回值是普通结果，立即将nextPromise给resolve掉\n            nextPromise.resolve(nextResult);\n        }\n        return nextPromise;\n    },\n    _push: function(nextPromise, nextOK){\n        this.thens.push({\n            promise: nextPromise,\n            ok: nextOK\n        });\n        return nextPromise;\n    },\n    then: function(nextOK){\n        var promise = new Promise();\n        if (this.state == 'fulfilled'){\n            // 如果当前状态是已完成，则nextOK会被立即调用\n            return this._fire(promise, nextOK);\n        }else{\n            // 否则将会被加入队列中\n            return this._push(promise, nextOK);\n        }\n    }\n};\n```\n到到了这里，我们的极简版Promise就完成了，那么如何使用呢？\n这里举个例子，首先定义一些“任务”，例如：\n``` javascript\nfunction print(num){\n    console.log(num);\n    return num;\n}\nfunction addTwo(num){\n    return num + 2;\n}\n```\n按需要组织这些任务\n``` javascript\nvar promise = new Promise(print);\npromise.then(addTwo)\n       .then(print)\n       .then(addTwo)\n       .then(print); // 这里的任务将会加入到队列中\npromise.resolve(3); // 激活整个队列\n```\n可以看到控制台里依次打印出了3、5和7。\n但这些任务都是同步的，无法体现出Promise的强大之处——异步控制。这里我们通过`nextOK`返回promise的方法来实现一个`delay`。\n``` javascript\nfunction delay(ms){\n    return function(obj){\n        var promise = new Promise();\n        setTimeout(function(){\n            promise.resolve(obj);\n        }, ms);\n        return promise;\n    };\n}\n```\n利用它来改造上面的任务队列，让后两次打印之间延迟2秒：\n``` javascript\nvar promise = new Promise(print);\npromise.then(addTwo)\n       .then(print)\n       .then(delay(2000)) // 延迟2秒\n       .then(addTwo)\n       .then(print);\npromise.resolve(3);\n```\n利用这个原理，可以做一些巧妙的代码：\n``` javascript\nfunction fibNext(pair){\n    print(pair[0]);\n    return [pair[1], pair[0]+pair[1]];\n}\n\nvar promise = new Promise(fibNext);\npromise.then(function(pair){\n    promise = promise.then(delay(1000))\n                     .then(fibNext)\n                     .then(arguments.callee);\n    return pair;\n});\npromise.resolve([1,1]);\n```\n上面没有使用循环，但是实现了一个无限每隔1秒自动打印的斐波那契数列。\n\nPromises模型相当优雅，通过一些扩展可以实现诸如`when`, `whenAll`等API，对于封装异步操作非常有帮助。\n事实上的库中不常直接用Promise这个名字，而常用**Deferred**，Defer的意思是“延迟”，因此Deferred常被成为“延迟队列”或者“异步队列”。在jQuery 1.5中引入了jQuery.Deferred，Dojo在这方面也是先行者，dojo 0.3就实现了Deferred。事实上在使用了Deferred之后，`jQuery.ajax`和`dojo.ajax`返回的结果都是Deferred，因此可以用`then`取代传统的传入回调函数的形式，非常方便，例如在dojo中可以：\n``` javascript\ndojo.xhrGet({ \n    url: \"users.json\", \n    handleAs: \"json\" \n}).then(function(userList){ \n    dojo.forEach(userList, function(user){\n        appendUser(user);\n    }); \n});\n```\n使用这样的代码可以随时对ajax请求添加回调，而不一定是在定义之初设定回调，灵活性更强。\n而“设定一系列函数，在合适的时候调用它们；在此之后加入的函数将会被立即调用”这样的特性简直天生就和domReady是一对，实际上jQuery也使用Deferred重构了`$.ready`。\n与此同时，借助Deferred实现动画这样的连续、并行的异步任务也非常优雅。\n\n通过Promises模型，把异步操作都理解为异步“任务”，以任务为单位来组织调度异步操作，实际上已经有那么点函数式的味道了。\n下一篇文章，也是这个系列的最后一篇，将介绍另一种更加函数式的JavaScript异步操作组织方法。\n\n①事实上Promises/A的定义要复杂的多，包括失败`reject`等等，本文不细做阐述。","mtime":1398413418000,"source":"_posts/javascript中的异步梳理（2）-使用promisesa.md"},"nfamorte6xm79hvu":{"_id":"nfamorte6xm79hvu","content":"title: \"JavaScript中的异步梳理（3）——使用Wind.js\"\nid: 191\ndate: 2012-09-27 19:47:31\ntags: \n- 编程\n---\n\n拖了几百年的三部曲终于迎来了第三篇，时过境迁，Jscex已经更名为[Wind.js](http://windjs.org/cn/)了，这里先给一下之前的链接\n\n[JavaScript中的异步梳理（1）——使用消息驱动](/2012/05/28/javascript中的异步梳理（1）-使用消息驱动/ \"JavaScript中的异步梳理（1）——使用消息驱动\")\n[JavaScript中的异步梳理（2）——使用Promises/A](/2012/06/28/javascript中的异步梳理（2）-使用promisesa/ \"JavaScript中的异步梳理（2）——使用Promises/A\")\n\n在之前介绍的方法中，无论是消息驱动还是Promise，都无法摆脱“回调”这个东西。\n习惯了命令式编程的我们似乎很难接受回调，因为它的执行顺序和代码编写顺序并不一致。而JavaScript中的回调之所以会有这么多话题值得讨论，我想一方面是因为它有一张长得像Java的脸，而同时却又有如此多的异步特性。反观像Erlang, F#那样生来就是异步的语言，似乎反而没这么多话题好讨论的。\n\n异步就要回调吗？这是个问题，习惯了JavaScript中的异步似乎这个问题的答案是肯定的，但Wind.js却扭转了这一点。\n<!--more-->\n\n在同步、阻塞的环境下，我们写下如下代码\n\n``` javascript\nstr = readFile('...');\nstr += 'ok';\nwriteFile('...');\n```\n\n似乎理所当然地就认为1、3两行耗时操作会阻塞掉程序，于是在开发GUI程序的时候，遇到IO操作我们通常会开启新的线程来进行IO，然后完成时再通知主线程，这样可以避免GUI失去响应。\n\n在JavaScript的世界里，用户代码只有一个线程，JS使用异步来解决这个矛盾，与此同时使用回调的方式来达到“通知主线程”的效果。\n\n似乎由于在此之前异步为人重视程度不是很高，JS的异步特性被大家广为接受之后，似乎回调成为了标准的异步解决方案。的确，回调是一种看起来很像声明的编程方法，在单一异步操作的时候，回调还算优雅，但一旦涉及异步流程控制的时候，回调嵌套就会成为挥之不去的噩梦。\n\n回过头来看过去的同步阻塞编程方法，似乎顺序执行更讨好一些，因为代码怎么写的，程序顺序就是怎么样。\n\n[@老赵](http://weibo.com/jeffz)开发的[Wind.js](http://windjs.org)为我们提供了“顺序编写、异步执行”的机会。Wind.js的原名叫Jscex，全称JavaScript Computation Expression，即JavaScript计算表达式。\n\n计算表达式这个词是从函数式编程中来的，想象我们中学的时候解数学和物理题，我们总会用各种代数标识来表达变量，推导、化简完公式之后，才把题目中给的具体数值代入。这样做不仅让推导过程更加清晰可懂，还能避免中间的运算产生精度的损失。在命令式编程中，我们写下\n``` javascript\nc = a + b;\n```\n的时候，`a+b`这个表达式就已经被执行计算，并且把结果赋值给`c`了。但在函数式语言中则不尽然，由于“延迟计算”的特性，上面的代码并不一定会立即执行，而只有在它“需要被执行”（例如输出）的时候才会真正执行。\n\n有了“计算表达式”的概念之后，我们就可以把异步操作理解为异步任务，在Wind里一个“异步方法”执行的时候将返回一个“异步任务”，也称为“Task对象”。\n（下文中部分Demo来自于[windjs.org](http://windjs.org)）\n例如这里我们定义一个异步方法`printAsync`\n``` javascript\nvar printAsync = eval(Wind.compile('async', function(n){\n    console.log(n);\n}));\n```\n当执行它的时候，并不会直接执行方法，而是会返回一个`Task`对象，可以通过\n```javascript\nvar task = printAsync(1);\ntask.start(); // 1\n```\n来真正启动一个`Task`\n\n到这里似乎并没有看出来异步方法和Task有什么用，那么我们再看看从异步方法里调用别的异步任务的情况\n``` javascript\nvar fibo = eval(Wind.compile('async', function(){\n    var a = 1, b = 1;\n    console.log(a);\n    $await(Wind.Async.sleep(1000));\n    console.log(b);\n    while (true){\n        $await(Wind.Async.sleep(1000));\n        var c = a + b;\n        console.log(c);\n        a = b;\n        b = c;\n    }   \n}));\n```\n上文的代码中，在异步方法里使用了`$await`来“等待”一个异步任务，这里的异步任务是由`Wind.Async.sleep`提供的等待1秒钟的任务。\n通过这样的代码实现了每隔1秒钟自动打印下一个斐波那契数，想一想如果不使用Wind.js的话似乎意味着我们需要`setInterval`了，而在js里写一个`while (true){ ... }`似乎也算得上是一件匪夷所思的事情了。\n\nWind.js通过对异步方法中的JS代码进行二次编译，将“顺序编写”的代码变成了JS的“异步+回调”的风格，这让我们在开发的时候可以沿用一些过去常用的思路，例如上面的例子中的`sleep`（有多少朋友初接触JavaScript的时候有上网搜索如何进行sleep的经历？）。\n而Wind.js的其他辅助方法里也有诸如`whenAll(tasks)`这样的方法能够帮助我们进行一些多重依赖的流程控制。\n\n上文中使用了一个短得不能再短的Demo来演示了Wind.js是如何让我们的代码可以“顺序编写、异步执行”的。网上也有朋友怀疑这样是否违背了JS异步模型的初衷，我个人认为没有这个问题，编程语言为我们提供的只是一种编程语言的发明者认为比较不错的方法，根据个人习惯和项目需要，只要语言有为我们提供了改造它的能力，我们完全可以改造它，只不过正好JavaScript为我们提供了改造的空间而已。我们完全没有必要被语言特性本身绑架，束缚了编程思维，只选择以单一的模型去迎合语言特性。\n\n**在这里总结一下**\n这个小系列中所介绍的三种梳理JavaScript中异步操作的方法，并谈一谈我自己的选择。\n**消息驱动**——编程模型最简单、代码风格最回调。适合有“剧本”的代码，例如用它来编写一段动画的StoryBoard或者设计阶段就定义好的若干步骤。\n**Promises/A**——API简单易用、代码风格也不难接受。适合“剧情”不大固定，需要经常以编程方式修改异步流程的程序。\n**Wind.js**——像是障眼法一样的可以让我们回归“传统”编程风格的工具。适合复杂逻辑、通过异步流控制时代码显得冗长的情况，通过$await异步任务的方式让代码更加易读，编写也更容易。\n\nJavaScript中的流程控制解决方案岂止是上述三种，[这里](https://github.com/joyent/node/wiki/modules#wiki-async-flow)有一个巨大的列表，仔细研究的话还会找到诸如Flow-JS、seq、Step等等一大堆独具匠心的工具。\nJavaScript是一门非常开放的语言，由于本身的简洁和动态特性给我们带来很大“二次创作”的空间，即可以是仅仅从API上提供方案，也可以通过二次编译大刀阔斧的进行改造。这正是这门语言吸引人的地方之一。\n\n**至此这个系列终于结束了，但JavaScript异步梳理的路才刚刚踏上起点（此时吉姆作45°仰望星空状）。**","mtime":1398413418000,"source":"_posts/javascript中的异步梳理（3）-使用wind-js.md"},"gks9qe13hndrqpl0":{"_id":"gks9qe13hndrqpl0","content":"title: \"Jim Plays <Always With Me>\"\nid: 122\ndate: 2012-09-07 19:36:20\ntags: \n- 音乐\n---\n\n千与千寻的片尾曲，自学，入门水平，轻拍。\n\n视频：[优酷](http://v.youku.com/v_show/id_XNDQ3ODk4NjIw.html)，MP3：[百度网盘](http://pan.baidu.com/share/link?shareid=25632&amp;uk=1359475634)\n<object width=\"480\" height=\"400\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" align=\"middle\"><param name=\"src\" value=\"http://player.youku.com/player.php/sid/XNDQ3ODk4NjIw/v.swf\" /><param name=\"allowfullscreen\" value=\"true\" /><param name=\"quality\" value=\"high\" /><param name=\"allowscriptaccess\" value=\"always\" /><embed width=\"480\" height=\"400\" type=\"application/x-shockwave-flash\" src=\"http://player.youku.com/player.php/sid/XNDQ3ODk4NjIw/v.swf\" allowfullscreen=\"true\" quality=\"high\" allowscriptaccess=\"always\" align=\"middle\" /></object>\n\n**设备&&软件：**\n键盘：Casio PX135；音源：The Grand 2；摄像：iPhone 4S；编辑：Sony Vegas。","mtime":1398413418000,"source":"_posts/jim-plays.md"},"fw0o5x97ji9rs900":{"_id":"fw0o5x97ji9rs900","content":"title: \"“正则大挑战”心得\"\nlayout: post\ndate: 2014-1-4 20:23:12\ntags: \n- 编程\n---\n\n就是**[它](http://regex.alf.nu/)**！！！这是昨天在微博上看到的“只要把这16个题做完，你就可以精通正则。”啧啧啧，好奇心驱使我点开了……\n\n然后……真是太好玩了，这是一个正则表达式的游戏，其中有的题目简直丧心病狂，可以说是我做过最难的编程puzzle之一了。\n\n这篇博客将会分享一下**我的解答**，后来[@小雪-Joanna](http://weibo.com/wileam)给我发了一个[牛人答案（标准答案？）](https://gist.github.com/jonathanmorley/8058871)里面我看得懂的也分析一下。\n\n<!-- more -->\n\n## 1.Plain String\n\n> Type a regex in the box. You get ten points per correct match. Hit Enter to go to the next 'level'.\n\n送分题，毫无疑问，答案是`foo`，**207**分。\n\n## 2.Anchors\n\n> You are deducted one point per character you use, and ten if you match something you shouldn't.\n\n考察对**边界**的应用。最开始我给出的是`ick$`，后来发现是`ck$`，最后丧心病狂的发现是`k$`，得分分别是206, 207, **208**。\n\n## 3.Ranges\n\n> The test vectors were generated by grepping /usr/dict/words. Can you tell?\n\n考察对**范围**的应用，同时结合**边界**和**量词**。我的答案是`^[a-f]+$`，当然`^[a-f]*$`也是可以的，并且得分一样，都是**202**。\n\n## 4.Backrefs\n\n> This doesn't really work as a tutorial. Not really clear what you're supposed to do here.\n\n从题面上看，是考察对于**反向引用**的使用。我给的答案是`(.{3,}).*\\1`，得分是**199**，找了很久没有发现优化空间，直到我看了牛人解答之后，竟然给出了`(...).*\\1`，我真蠢。\n\n## 阶段性小结\n\n毫无疑问前4关是比较简单的，其中前3关都是正则中会用到的基本用法，第4关只要是比较熟练的同学也肯定是会的，能否拿高分差别在于够不够省。\n\n## 5.Abba\n\n> Let's pretend this one is not a rehash of the last one.\n\n说实话这个题目相当具有迷惑性，也挺有难度，微博上看的确有不少同学卡在这题上了。\n\n观察题面，要求**不匹配**字符串内含形如`abba`组合的串，首先可以简单地使用反向引用构造出`(.)(.)\\2\\1`。\n\n有了它后，怎么做到**不匹配**呢？这里要用到**负向前瞻**，负向前瞻是**零宽断言**的一种，JavaScript中的负向前瞻形如`(?!exp)`，匹配后面不是exp的串。\n\nOK，下面一步步构造，首先用`(?!(.)(.)\\2\\1)`试试，发现左边的都匹配上了，右边的……也匹配上了- -|。然后用一个很损的办法，`^(?!(.)(.)\\2\\1)`，右边干掉了2个。\n\n这时候其实回想一下题目，我们要排除的是形如`****abba****`的串，那么在刚才的基础上加上`^(?!.*(.)(.)\\2\\1.*)`，对了！191分。\n\n再仔细想一下，对abba再后面的串其实没必要再限制了，优化到`^(?!.*(.)(.)\\2\\1)`，**193**分。\n\nJavaScript的正则只支持**前瞻**(Look Ahead)而不支持**后瞻**(Look Behind)，也就是说我们只能“用右边的东西限制当前位置”。\n\n## 6.A man, a plan\n\n> You're allowed to cheat a little, since this one is technically impossible.\n\n对称串嗯哼？有了前面的经验这题不会很难的，我构造了半天，中间也经过几次升级，结果用了`(.)(.).?\\2\\1.?$`，得分是**175**。\n\n牛X答案给的是`^(.)[^p].*\\1$`，我只想说这东西相当牛X，而且很符合题目描述_cheat a little_，它能拿到177分。\n\n## 7.Prime\n\n> The length is not part of the string. I should probably have chosen a different color.\n\n非常非常好玩的一道题，要不是我曾经看过[M67的一篇博客](http://www.matrix67.com/blog/archives/475)知道正则有**判断素数**这种神奇的用法，这道题简直无从下手。\n\n首先用`^x?$|^(xx+?)\\1+$`判断长度是合数，因为没有长为0或1的，所以直接精简到`^(xx+?)\\1+$`，nice！错误答案全部匹配，正确答案全部不匹配。\n\n有了上面的经验，剩下的不会有什么难度了，`^(?!(xx+?)\\1+$)`，**285**分到手。而牛人答案`^(?!(..+)\\1+$)`中却没有对中间的`xx+?`启用非贪婪，达到286分，这个因为我不怎么看得懂这个素数匹配的原理，所以我也不再妄加评判了……\n\n## 8.Four\n\n> You can get an extra point by ignoring the name of this level.\n\n观察题面，它要匹配的其实是形如`*a*a*a*a`或者是`a*a*a*a*`，按照这个思路，可以构造出`.(.)(?:.\\1){3,}|(.).(?:\\2.){3,}`，这样已经可以拿到179分了。\n\n其实进一步观察，不难发现其实形态1中的开头和形态2中的结尾是并不重要的，所以我们想要的其实只是`a*a*a`而已，那么`(.)(.\\1){3}`就可以完美解决了，并且能够得到**199**分。\n\n## 阶段性小结\n\n5~8题开始有点没节操了，但至少还是在技术技巧的范围内的，第7题天马行空，报酬也丰厚。\n\n事实上我从9题开始就胡诌了。\n\n## 9.Order\n\n> Cheat.\n\n描述一点也不含蓄，看题面，发现需要匹配的是**非降序**的串。\n\n然后我实在是不会了，我本来天真的以为`(.)[\\1-z]`中的范围表达式是可以利用反向引用的，结果当然是不行。于是我随便写了个`^a[b-z]+$`，惨淡地得了**41**分。\n\n然后看了牛人解答我哭了，`^.{5}[^e]?$`，果然是cheat，当然也不得不佩服这观察力，199分。\n\n## 10.Triples\n\n> Multiples of 7 are left as an exercise for the reader.\n\n题面很简单，就是**能被3整除**。搜索了一下，有能构造**匹配能被3整除的2进制数**的办法，但是这里是10进制。于是胡诌继续，`00`就这么搞上去，也能**118**分你敢信？\n\n答案是`00($|3|6|9|12|15)|4.2|.1.+4|55|.17`，满分达到了596分。我觉着这货跟数学没啥关系，就是靠观察力硬凑……\n\n## 11.Glob\n\n题面非常有意思，要构造一个`xxx matches yyy`这种，也就是matches的前面充当正则的时候能匹配后面的串。\n\n当然如果往这个方向想，那就肯定做不出来的（好残酷），当我看到答案的时候，我吓尿了：`ai|c$|^p|[bcnrw][bnopr]`这要有多强大的观察力才能做出来。\n\n我的答案`\\*`，**58**分惨淡收场。\n\n## 12.Balance\n\n> This one is also impossible, but there's a finite number of test cases.\n\n描述都说impossible，当场吓尿。你猜我给的是什么？说出来吓死你：`^$`，得分**8**也吓死你……\n\n[@Thomas](http://weibo.com/11978569)凭借`<<<<`得到了146分，我佩服他想象力！\n\n牛人答案是`^(<(<(<(..)*>)*>)*>)*$`得分288，**但这依然并不是完美答案**。\n\n括号配对对于正则是一个非常大的难题，因为[正则文法](http://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E6%96%87%E6%B3%95)的定义先天就不是递归的。我们现在用的加强的正则表达式，尽管加入了反向引用、计数、前瞻后瞻等高级功能，但我理解它的数学定义并没有超过这个范畴，而是在实现引擎层面上新增的功能。\n\n但其实正则来处理括号配对不是不可能的，C#标准库的正则是支持[平衡组](http://msdn.microsoft.com/zh-cn/library/bs2twtah.aspx#balancing_group_definition)的，我也没有实际用过，就不深入聊这个了。\n\n## 阶段性小结\n\n9~12题是相当丧心病狂，不“作弊”基本没法正常做了。而且后面的题目作者好像已经完全懒得写描述了。\n\n## 13.Powers\n\n从题目名字看，就是**幂**（我不是要说杨幂）。\n\n付出了把键盘敲烂的代价，我丧心病狂地写出了`^((((((((((x)\\10?)\\9?)\\8?)\\7?)\\6?)\\5?)\\4?)\\3?)\\2?)\\1?$`，虽然是完美匹配，但估计是因为表达式太长，只得了**56**分。\n\n牛人答案是`^(?!(.(..)+)\\1*$)`，这个很有意思，我们来解读一下。\n\n首先我只看到了正确答案是**长度为2的整数次幂的串**，而没有观察错误答案，这不得不说是一个重大失误！\n\n错误答案中比较短的几个，长度是3,5,7,11,13的串，可以表示为`2n+1`，那么可以先构造出`^(.(xx)+)$`，发现还匹配了401和1025。\n\n那么，长度为28,48,160,600的呢？把他们做因数分解，发现28=7\\*2\\*2, 48=3\\*2\\*2\\*2\\*2, 160=5\\*2\\*2\\*2\\*2\\*2, 600=75\\*2\\*2\\*2，也就是说他们都是`(2n+1)*pow(2, m)`的形态。于是在上面的基础上构造出来`^(.(xx)+)\\1*$`，能够成功匹配所有错误答案了！\n\n结合第7题中的狗血方法，稍作修改就得到`^(?!(.(..)+)\\1*$)`这个答案，其实也不过才93分而已嘛……当然不看答案的话我也真心找不到这规律。\n\n## 14.Long Count\n\n我会告诉你我直接把左边的那串数字拿来用了吗？**191**分。\n\n答案是`^((.+)0 \\2+1 ?)*$`仔细看看应该能明白，还是凭借细心的观察，这样可以拿到253分。\n\n## 15.Long Count v2\n\n我会告诉你我<del>又</del>直接把左边的那串数字拿来用了吗？**191**分。\n\n答案<del>又</del>是`^((.+)0 \\2+1 ?)*$`，这样<del>又</del>可以拿到253分。我根本没观察跟14题有啥区别，所以不评论了。\n\n## 16.Alphabetical\n\n毫无头绪的一题，`aerate `骗到**33**分，好累，感觉不会再爱了。\n\n答案是`.r.{32}r|a.{10}te|n.n..`，317分，我的建议是不要试图解读它。\n\n## 难忘今宵\n\n我的总分是**2364**分，相比于能刷上3000分的大神们，结合文章开头的话“只要把这16个题做完，你就可以精通正则。”我现在只能说\n\n> 我根本不会正则啊！！！\n\n如果你看到了这里，说明你也刚刚经历了一场惨痛的折磨，对此我深表同情。","mtime":1398413418000,"source":"_posts/regex-golf.md"},"keyxm13ye0iatom0":{"_id":"keyxm13ye0iatom0","content":"title: \"SONY NEX-6入手初评\"\nid: 278\ndate: 2013-03-02 20:52:20\ntags: \n- 生活\n- 影像\n---\n\n2012年底心情低落期间怒入手NEX-6 + 16-50套机，最近工作有点小忙，加上帝都天气冷得遭不住，空气还特别糟糕，没怎么出去走动，样片比较少。\n渣排版，轻拍……\n<!--more-->\n\n## 外观\n\n开箱什么的就不发了，遍地都是\n\n* 体积跟NEX7比较接近，和5N最大的差别就是卡口环不会超过机身，感觉就没那么违和了。\n* 模式转盘很丑，但挺方便。\n* 机身两侧的挂绳孔是细环+三角圈的形式，第一感觉不如独立粗环的结实。\n\n## 硬件篇\n\n去体验店玩主要对比了跟NEX7的差别。\n\n* 没有触摸屏，在这年头多少是个遗憾。\n* NEX7有逆天的双波轮+数据转轮的设计，例如A档下，一个波轮控制光圈、一个控制EV、数据转盘控制ISO，组成了3波轮控制系统，非常逆天。而NEX6表面上看比7少了一个波轮而已，其实差多了，因为数据转盘不能直接控制ISO（或者EV），只能先按一下方向键选择要调节的数据类型才能转。我觉得这样也就只能算1.5波轮系统了。\n* 模式转盘手感偏硬，需要用俩手指捏着转。\n* 录像键放在了一个极其扭捏的地方，还是内陷式的，指尖才能按下，键程很短，毫无段落感，手感奇差。\n* 闪光灯弹出按键设计的也有点脑残，也是内陷式的，而且这个键是机械的，相当硬，要用指甲才能按下去，这样上面的图标喷漆估计要不了多久就挂了。\n* EVF非常精细，据说比NEX7的延迟大，没有仔细对比。弱光下延迟明显变大，且噪点很多，没辙，这种时候能用都不错了。屈光度调节旋钮脑残了放在右边，左手调也不是，右手调也不是。\n* 没有5R逆天的翻转屏，一个细节是如果想直接向下翻是翻不出来的，必须先向上一点，拉出来，再向下（或许是我不敢用力？）算够用了，毕竟如果不能向上180°，那么向上135°意义不大。\n* 数据和充电接口是micro-usb，略微良心。不能一边充电一边工作，USB数据模式同时不充电。这种坑爹的设定明显就是SONY为了那个电源适配器能卖得出去。\n* 太省了，已经遭不住了，套机镜头直接拧机身上了，省了一块机身盖和一块镜头后盖，要知道这俩货色不便宜的。然后电池没座充，只有一个适配器，电流才0.5A，体积却一点也不小，直接被我扔进柜子了，用USB或者iPhone的充电器就行了。现在俩电池很尴尬，只能一块接一块地冲，或者买个山寨座充。\n\n## 软件篇\n\n比较让我**不满**的几个点：\n\n* 自动ISO的时候不能设置上限，实践中发现通常系统会控制一个最低快门值（如1/60s，不确定会不会根据镜头焦距和防抖来改变），然后A档的时候，在弱光下逐渐提升ISO，而貌似直到3200后就开始降快门了。事实上3200基本上就是这台机器的最高可用ISO，所以这个设计算凑合够用了。当然跟指定ISO上限比还是差了点。\n* 开启MF辅助功能，并且使用自动头的时候，只要一转动对焦环，立马画面就会放大。我希望的效果是平常它不放大，而我通过快捷键来开启放大功能。于是我天真地到菜单里把MF辅助设置成了关，然后把下软键分配给MF辅助。好家伙，一按键就告诉我必须设置MF辅助为开。于是进入先有鸡还是先有蛋的问题了。好在只有自动头有这种死循环，手动头不会自动放大，就可以随便拧了。\n* WIFI功能，很遗憾我用的是国行，不支持App功能，所以不能用手机WIFI遥控，也不能装诸如多张连拍降噪这类的App。那WIFI还有啥用呢？只能跟手机和电脑传照片。和电脑传的时候龟速，完全不能忍（这不科学，骚尼你闹哪样）。和手机传这个功能还是比较实用的，第一时间微博？不过那个wifi热点的密码感觉是随机的，每次手机输入一串乱七八糟的密码挺蛋疼的。\n* 菜单翻译有的地方很值得吐槽。比如包围曝光翻译叫阶段曝光，这还算好的，毕竟意思在那了。把WIFI的WPS Push翻译叫“WPS按压”，这情何以堪。\n\n## 拍摄篇\n\n* 只有机械快门，没有无声模式（纯电子快门）。\n* 1650镜头表现比较失望，画质不行，开关机反应也偏慢，胜在体积还可以了。变焦杆是恒定速度的，而且弹簧有种松垮垮的感觉，倾向用变焦环。\n* ISO 3200勉强可用，代价是开启高ISO降噪为“标准”，细节有涂抹（还没心思研究调解RAW）。\n* 说明书上说用EVF拍摄张数少于用屏幕，难道那货比屏幕费电？\n* 使用MF辅助的时候有个细节，因为测光需要一点点时间，于是如果在光线条件比较混乱的环境里，快速指向目标然后开启了MF辅助，在MF辅助开启的时候测光不工作，于是这个时候常常看见一片白或者一片黑。于是乎必须稍微等等，等测光稳定下来之后才开启MF辅助。这货是个BUG吧，MF辅助怎么会和测光冲突，直接造成需要MF辅助的时候效率降低。\n* 连续对焦的连拍速度作为中端机已经很棒了，而“速度优先连拍”是只有第一张AF和测光的，达到了10FPS速度。（事实上观察发现普通连拍模式也不能动态改变测光？）\n* 拍视频，第一感觉不像用手机拍摄者自己的声音会很大，估计因为麦克风在正面吧。两个麦克风离镜头很近，使用1650在拍摄视频中变焦会能听到有马达的沙沙声，比较郁闷。\n\n## 转接篇\n\n子曾经曰过：NEX不玩转接就是浪费，于是我必须不能免俗，第一时间买了一个国产35/1.7 CCTV头，和一个MA-E的山寨转接环，转接对象是过去拧单反上的DT 50/1.8。\n一入转接深似海，从此钱包是路人，此言不虚。\n\n* 手动头怎么玩？我常用两种办法，自动ISO，一种是A档，光圈在镜头上调节（废话），让系统决定快门和ISO。一种是S档，自己设定光圈快门，让系统决定ISO。当然全手动也行了。\n* 50/1.8的画质很不错，但是转接单反镜头就是体积大，端着傻大粗就让我失去了拍摄欲望。所以我只在家里的时候玩玩，没带出去过。这支镜头对焦环的声音较大，拍摄视频的时候能听到明显的沙沙声，这很讨厌。\n* 国产35/1.7 CCTV这头明显可玩性很高，价格逆天，100多块钱，简直就跟白送似的，而画质竟然还不差。1.7的时候有些肉，我喜欢收到2.8或者4用，这时候锐度不错，色散也不明显。比较坑爹的是我这只镜头装上身以后光圈和对焦数值就转到底下去了，可能是个体问题。于是我也懒得随时调光圈，经常把它当成了2.8固定光圈在用。淘宝商家送的近摄圈很逆天，不装的时候最近对焦距离50cm左右（标称的是30cm），装一个近摄圈直接就变20cm的样子，当然，这时候不能对焦到远处了。\n* 这支镜头是无级光圈，我买的是吓人的12片光圈的版本，事实证明散焦是挺圆的，但口径蚀很明显。光圈环和对焦环的阻尼还不错，无声且细腻，行程适中。拍视频的时候感觉挺舒服的。\n* 转接除了意味着手动还意味着没有防抖了，如果用中短焦距，平常还行，开启MF辅助就微微痛苦。可以想象转接中长焦和比较重的镜头是挑战手腕的。\n\n## 总结篇\n\n1.  优点明显，缺点也明显，不过市场定位精准，目前其他家似乎没有同价位产品。\n2.  1650有点坑爹，装上了跟DC似的。16mm的广角在某些时候也的确是比18要强那么一些，锐度就靠收光圈了，到6.3左右还是可以的。不过作为一款入门级的套头也凑合。\n3.  峰值对焦+MF辅助让手动镜头拍摄变得很流畅而且相当有乐趣，不管打不打算继续玩转接，我都建议有NEX机身的人搞个国产35/1.7 CCTV镜头玩玩，反正便宜。\n\n## 样张篇\n\n真没怎么拍……两张夜景是1650拍的，其他是35。\n\n[![水立方](/uploads/2013/01/DSC00908-150x150.jpg)](/uploads/2013/01/DSC00908.jpg)\n\n[![小玩具](/uploads/2013/01/DSC00975-s2-150x150.jpg)](/uploads/2013/01/DSC00975-s2.jpg)\n\n[![演出](/uploads/2013/01/DSC00783-150x150.jpg)](/uploads/2013/01/DSC00783.jpg)\n\n[![夜景](/uploads/2013/01/DSC00157-s-150x150.jpg)](/uploads/2013/01/DSC00157-s.jpg)\n\n[![香水](/uploads/2013/01/DSC00295-s-150x150.jpg)](/uploads/2013/01/DSC00295-s.jpg)\n\n[![小孩](/uploads/2013/03/DSC01076-150x150.jpg)](/uploads/2013/03/DSC01076.jpg)\n","mtime":1398413418000,"source":"_posts/sony-nex-6入手初评.md"},"62m6wgjepykx1z4w":{"_id":"62m6wgjepykx1z4w","content":"title: \"聊聊我在用的一些付费会员\"\ndate: 2014-04-24 09:41:08\ntags: \n- 站着说话不腰疼\n- 生活\n---\n\n**~~哈哈哈哈哈哈炫富帖来了！~~**\n\n身为互联网行业的一员，虽然我做的是纯纯纯免费的用户产品，但是为了攒点人品，防止未来有一天失业了，我还是会尝试各种付费会员，心理上就当给互联网行业做贡献了吧……\n\n<!--more-->\n\n## 爱奇艺\n\n~~也不知道我当初哪根神经断了~~买了半年的爱奇艺会员，没记错的话好像是10元一个月吧，应该是2011年下半年的时候。\n\n除了去广告和较少的会员资源（以当时看来），由于爱奇艺是一个非UGC视频网站，我其实不是很常看了……所以这钱基本上是白花了。\n\n在我厂某年年会上，爱奇艺1年会员是“普天同庆”奖，但是……不是100%中奖率的，而且我都没中！~~我觉得其实是我为此伤心了才没续费的~~\n\n时间过去比较长了，就不评价了。\n\n## 优酷\n\n优酷真心黑，现在广告经常45秒。身为一个YouT*be爱好者我表示资本主义国家的人们可以只看几秒钟广告就选择跳过真是很不错……\n\n以前我记得优酷会员好像也是10块还是15一个月来着，现在已经涨价到20了。刚看了一下年付是169块，微信支付立减20，也就是149。相当于不到15一个月。\n\n会员的功能，首先是跳过广告，首先帮助我节约了很多时间去等广告，其次帮助我节约了很多时间去琢磨各种去广告插件，~~Time is money, my friend~~。没有广告取而代之的是一个会员封面，上面有一个土掉渣的土豪金皇冠，以及“已为您跳过广告”的此地无银三百两文案。优酷告诉我已累计节省20.45万秒，你特么还好意思说！！！！\n\n其次是会员对于有1080P的资源是可以开1080P的，那么，哪些资源是有1080P的呢？正版资源方面，我发现这几个月来开始普及了。UGC资源方面好像有点奇怪，我自己上个月上传的1080P的视频结果最高只给了“超清”，但是有的视频又却有1080P，也或者是一些媒体合作的会有？这个真不知道了。\n\n然后是有一部分会员专属的影视资源，以及收费资源点播半价。因为我通常会比较懒得去下载电影或者电视剧，在线看的时候还是挺多的。尤其是一些刚从院线上下来一段时间，开始在视频网站上出现的电影。优酷通常会收费点播5元，会员就是2.5，基本就是白菜价，我大概总计在这上头花了二三十块吧。\n\n最近优酷出了一个新功能是可以帮会员提升家里的宽带速度，我理解就是优酷出钱找电信网通开带宽吧，我有在网上看到别人说的确能开通，不过我的这个宽带它说不支持……\n\n**优酷：推荐程度5星**\n\n## 迅雷\n\n迅雷的产品太多了……我都数不过来，而且它的会员体系极其混乱，会员、VIP、影视会员、白金会员、我反正没研究清楚过。\n\n刚看了一下，我这个叫“白金用户”，原价15一个月，年付是149，和上面说的优酷年付微信支付是一样的。\n\n会员特权？说实话我没怎么用（捂脸）首先是迅雷下载，可以用一个会员专属客户端，完全没有广告的，运行速度跟占用资源方面比普通版的客户端的确好很多，图标还是那只鸟，不过升级到了可耻的土豪金。\n\n然后就是有离线下载和高速通道的容量，具体是多少我也没怎么注意。\n\n很多人也许比较关心迅雷会员下载速度到底快不快，这个其实真的没法回答，因为下载这事情，受影响因素太多了：你的网速，资源提供方的网速，如果是P2P资源又受种子、下载数的影响……乱七八糟一大堆问题，最重要的还有人品问题，心诚则灵。\n\n由于现在我不常下东西，迅雷会员基本上是给别人在用（不能同时登录，会被挤掉），所以事实上我觉得它没啥用了。离线下载是个好概念，但是百度云网盘支持离线下载效果也不错，秒杀成功率还行吧。\n\n另外迅雷会员在各种产品之间貌似是有一定互通性的，比如我这个白金用户就可以直接用迅雷网游加速器专业版，但是不能用它的高级会员功能。大概意思也许是会员是通用的，但是各个产品有独立的VIP，氛围上是这意思吧……\n\n迅雷白金会员经常会有秒杀优惠，或者买一些别的东东捆绑赠送，如果遇到这种，搞一个倒也挺划算的。\n\n**迅雷：推荐程度2星**\n\n## 虾米音乐\n\n~~虾米音乐是全国最成功盗版音乐资源网站~~这其实是实话，因为它就是从做盗版资源开始的，而且到现在它正版化程度也很受质疑。但因为它的盗版特性以及UGC特性，使得它的资源完整性比QQ音乐和百度音乐要来的好多了（至少在我眼里是这样）。QQ音乐和百度音乐都是正版+搜索的套路，正版受制于与唱片公司签约，覆盖面非常有限（但可以拿到一些火热资源，比如QQ音乐有《我是歌手》第二季的第一手MP3）；搜索的质量和完整性太差。\n\n开始的时候虾米正因为有很多热情的歌迷去维护歌手和专辑信息，很快建立了非常全的资源库，而且能够覆盖日本（包含ACG世界）和欧美（包含不少独立音乐人）的诸多在国内甚至没有发行的音乐资源，这太吸引人了。随后虾米的精选集功能我觉得做的非常成功，在国内这几大在线音乐服务当中是独一无二的。\n\n虾米比较让我吐槽的地方在于它的手机客户端质量相对于QQ音乐和百度音乐这两个大厂做的要低不少。早些时候虾米音乐甚至~~因为版权原因~~iOS版本无法在AppStore上架，后来有了阿里后爸以后，终于媳妇熬成婆，上了AppStore~~（听起来怪怪的）~~←_←，但其实那时候的客户端功能少得可怜（iOS版连锁屏界面显示歌名的接口都没实现）。有了阿里后爸以后也许得到了人力财力和技术上的支持，iOS版客户端不久有了一次大升级，终于接近赶上第一梯队了。在此之后我换手机了，开始进入Android客户端的地狱。在忍受了几个月听歌时自动崩溃后（有时几十分钟，有时几分钟，有时几秒钟），虾米的程序猿gg们终于修好了。然后在某个版本中又加入了一个极其脑残的锁屏界面，为什么说极其脑残呢？首先它反应慢，经常都要系统自带的锁屏出来以后闪一下它才会出现（我的手机已经够好了真的），最重要的是，它不能禁用！！~~也许是在微博上被我骂过了吧~~后来给这个功能加了开关，关！满意了。总的说来虾米的手机客户端这块，我估计他们就两三个开发在做吧……还在追赶QQ音乐和百度音乐的节奏。\n\n扯远了，话说回来，即使被客户端虐了这么多次、这么久，我还是在虾米、QQ、百度三者中选择了虾米，甚至我厂的百度音乐我都没买，就是因为资源取胜……\n\n虾米的VIP是15一个月，年付120，相当于10块一个月。\n\n福利首先是在线听的时候可以选择高音质，以我这种地铁听歌党明显是听不出来差别的了。\n\n然后是它会赠送下载MP3，普通会员下载MP3可以用它的红包或者充值，年付会员每年可以下载1500首MP3，这数量在我看来还是挺多的，相当于100张专辑吧。~~虽然我到现在也就用了2首的配额……~~虾米下载的MP3通常都是320kbps，一般我这种木耳就可以把它当无损的听了，虽然我也无所谓有损无损。通常下载都会有完整的ID3信息和封面，从质量上讲，是令人满意的。\n\n介绍中还有一个说法是“手机下载无容量上限”，手机客户端离线缓存歌并不是最高音质的（VIP我也不确定是不是），这个和上面说的那个“下载MP3”不是一个概念。\n\n虾米有一点点社交概念，在发评论的时候，会员的名字旁边会有一个土掉渣的土豪金VIP标识。\n\n**虾米音乐：推荐程度3星**（音乐爱好者推荐程度4星）\n\n## 微博\n\n我脑子被门挤了我才买了微博会员，更脑残的是我不知道怎么就给开了每个月自动扣款，一个月扣我9块钱，我现在不知道到哪去关了！！！妈蛋！！！\n\n微博会员能干啥？其实我没大搞明白，因为它完全没影响我怎么刷微薄。\n\n在我的名字旁边会有一个土的掉渣的金色皇冠，喂喂能不能再出个付费服务每个月10块钱去掉这个皇冠啊？\n\n对了好像不是会员的话每个分组只能加200个人，我的“百度”分组就已经加满了，但是我给建了一个“百度2”，不过会员好像就能每个组加400个人吧，我也不记得了。\n\n真的不想多说了，谁能告诉我怎么去把那个每月自动续费给关了？我请你吃冰棍！\n\n**微博会员：推荐程度0星**\n\n## QQ\n\n中国互联网界最古老的会员体系之一，身为14年Q龄的铁杆用户，我却没买……为什么没买？也许是因为我的QQ号用的很久了，想在它身上保留2000年那个中国互联网刚开始走进家庭的感觉，想怀念一点当年网吧里有很多人别的啥不干，只在那聊QQ的场景吧。\n\n不过也许QQ会员是对我比较有吸引力的，因为可以多端同步聊天记录（非会员会有几天时间的限制），貌似还能多端同步表情。身为表情党这种功应该是很不错的。\n\n## 总结\n\n发现每个月要多花好几十块……手已剁，现在用脚趾头打字的！","mtime":1398413418000,"source":"_posts/talk-about-membership.md"},"qxfl4ddje2ujkkzo":{"_id":"qxfl4ddje2ujkkzo","content":"title: \"在BAE上使用hexo搭建博客\"\nlayout: post\ndate: 2013-11-20 19:23:12\ntags: \n- 编程\n---\n\n在[之前的文章](/2013/09/08/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/)中，我介绍了如何使用[hexo](http://zespia.tw/hexo/)来编辑博客内容，以及它自带的发布到[GitHub-Pages](http://pages.github.com/)的功能。\n\n但是我最后并没有把它部署到GitHub-Pages上，原因主要有：\n\n1. 在国内的访问速度比较一般；\n2. 提交代码后，要等好几分钟才能看到效果；\n3. 一个网站只能绑定一个域名。\n\n作为熊掌社的一名码农，我自然想到了把博客部署到[BAE](http://developer.baidu.com/bae)上面去。\n\n<!-- more -->\n\n相比之下有如下优点：\n\n1. BAE/SAE这些国内的PaaS在国内访问速度非常快；\n2. 提交即部署，基本上实时；\n3. BAE一个应用可以绑5个域名（SAE没研究过）。\n\n方法与发布到GitHub-Pages非常类似。\n\n首先需要在BAE上申请一个应用，得到SVN后，直接把整个hexo博客目录都放SVN上，这个时候，我们依然可以在本地用`hexo server`来看效果。然后改改好了以后，`hexo generate`生成`public`目录，这个时候同样把整个hexo博客的目录提交上去。这里我的观点就是既然是用了版本控制软件，那么源代码我肯定也是要管理的，所以会整个目录地提交。\n\n这时候重点来了，我们需要把`public`目录作为静态目录来使用，最方便快捷的方法是使用`url-rewrite`，BAE已经提供了这个功能。\n\n在BAE的程序配置里，加入一个规则，规则类型为`url`，将`(.*)`给rewrite到`/public/$1`，对应的`app.conf`代码大概如下，用BAE的网页界面配置也一样。\n```\n- url : (.*)\n  script : /public/$1\n```\n生效以后，任何访问的路径都会被映射到`/public`下，例如`http://your-domain/index.html`就会实际上映射到`/public/index.html`，于是直接访问应用程序域名就能访问`/public`里的静态文件了。\n\n这样，一个SVN就可以即保存文章的源代码，又可以做到commit即发布，是不是感觉方便程度也不输word press了呢？\n","mtime":1398413418000,"source":"_posts/use-hexo-on-bae.md"},"lf80q7hkt3h997gv":{"_id":"lf80q7hkt3h997gv","content":"title: \"使用Solarized的ls配色\"\nlayout: post\ndate: 2013-11-20 13:23:12\ntags: \n- 编程\n---\n\n<a href=\"http://ethanschoonover.com/solarized/img/screen-javascript-dark.png\"><img src=\"http://ethanschoonover.com/solarized/img/screen-javascript-dark.png\" alt=\"Solarized官方截图\" style=\"width:400px;\"></a>\n\n[Solarized](http://ethanschoonover.com/solarized)是一个挺不错的配色方案，给常见的编辑器以及终端软件（木有SecureCRT）提供了配置文件，使用起来也挺方便的，这样在使用Terminal/iTerm/Vim等程序的时候就有不错的配色了。\n\n但我经常需要在远程的机器上进行开发，这时候Vim配色比较好搞定，但是ls的配色就搞不定了，后来发现[dircolors-solarized](https://github.com/seebi/dircolors-solarized)这个东西，可以解决这种问题。\n\n<!--more-->\n\n先把代码下载下来，里面有几个`dircolors`的配色文件，通过执行\n```\ndircolors solarized.256.dark\n```\n这样的指令，可以生成一大堆shell命令，因此结合`eval`使用\n```\neval `dircolors solarized.256.dark`\n```\n即可将生成的代码设置到`LS_COLORS`环境变量上面，这个时候再`ls`，可以看到漂亮的配色。不行？试试`ls --color`（速度配个alias吧）。\n\n<a href=\"https://github.com/seebi/dircolors-solarized/raw/master/img/dircolors.256dark.png\"><img src=\"https://github.com/seebi/dircolors-solarized/raw/master/img/dircolors.256dark.png\" alt=\"dircolors-solarized官方截图\"></a>\n\n但实际上我在我厂的远程机器上试了半天，可能是shell版本问题吧，给的几个配色文件只有`solarized.ansi-universal`是可以正确执行的。最终的效果和官方截图有一些差别，比如官方截图上tar是紫色，而在我这边就是紫红色。不过颜色的丰富程度基本上是保持一致的。\n\n最后一步，当然不可能每次都执行上面那些，于是在`~/.bash_profile`里加上刚才的代码。当然有另一种办法，就是把`solarized.ansi-universal`文件拷贝到`~/.dir_colors`，这样shell启动的时候就自动读取它作为配色方案了。\n","mtime":1398413418000,"source":"_posts/use-solarized-dircolors.md"},"x2g1tij4n2bdsvye":{"_id":"x2g1tij4n2bdsvye","content":"title: \"《黑客与画家》 文摘\"\nid: 136\ndate: 2012-09-25 20:08:56\ntags: \n- 站着说话不腰疼 \n- 编程\n---\n\n一个月前读完了《黑客与画家》，因为很久没正儿八经看书（都是看Pad什么的），所以似乎有一种突然间上瘾的感觉，曾经两度读到晚上4、5点，第二天早上8点起来继续看。颇有大二的疯狂编程和大四搞毕业设计睡梦中想到一组参数然后惊醒起来改的“遗风”：P\n不过健康作息还是最重要的。\n\n写在前面：这篇只是文摘，读后感会[单写一篇](/2012/09/26/我这6年来的成长与倒退，暨《黑客与画家》读后感/ \"我这6年来的成长与倒退，暨《黑客与画家》读后感\")。\n\n<a href=\"http://www.ituring.com.cn/book/39\" target=\"_blank\"><img src=\"http://www.ituring.com.cn/bookcover/39.big.jpg\" alt=\"介绍\" title=\"Cover\" style=\"width:140px;\"></a>\n<!--more-->\n\n正文来了：）\n\n所谓“时尚”，本质上就是自己看不见自己的样子。就好比我们在地球上，却感觉不到地球在转动。\n\n书呆子就是那样惹上麻烦的，他们穿着不流行的衣服，讲着不合适的话。他们觉得自己提出了正确的观点，实际上却惹来了麻烦。习俗的力量不足以束缚他们。\n\n如果你出错了，没有人会提醒你，唯一的代码保护机制就是你的羞耻心，你不想被同事当成傻瓜，这就足矣。\n\n1998年，许多人认为再推出一个新的搜索引擎已经太晚了，互联网世界已经定型了，谷歌证明了这种看法是错的。如果新事物真的有重大改进，那么它总是可以找到生存空间的。\n\n财富才是你的目标，金钱不是。但是，如果财富真的这么重要，为什么大家都把挣钱挂在嘴边呢？部分原因是，金钱是财富的一种简便的表达方式；金钱有点像流动的财富，两者往往可以互相转化。但是，它们确实不是同样的东西，除非你打算伪造货币，否则使用“挣钱（make money）”这个词会不利于理解如何才能挣钱。\n\n交换媒介的优点是，它使得交易可以进行下去。缺点是，它往往模糊了交易的实质。人们觉得做生意就是为了挣钱，但是金钱只是一种中介 ，让大家可以更方便地获得自己想要的东西。大多数生意的目的是为了创造财富，做出人们真正需要的东西。\n\n最可能明白财富能被创造出来的人就是那些善于制作东西的人。他们做出来的东西直接放在商店里卖。但是，随着工业化时代的来临，手工艺人越来越少。目前还存在的最大的手工艺人群体就是程序员。\n\n要致富，你需要两样东西：可测量性和可放大型。你的职位产生的业绩，应该是可测量的，否则你做得再多，也不会得到更多的报酬。此外，你还必须有可放大型，也就是说你做出的决定能够产生巨大的效应。\n\n如果你有一个令你感到安全的工作，你是不会致富的，因为没有危险，就几乎等于没有可放大型。\n\n俗话说的话，最好的防御手段就是进攻。如果你开发出来的技术是竞争对手难于复制的，那就够了，你不需要依靠其他的防御手段了。一开始就选择较难的问题，此后的各种决策都选择较难的那个选项。\n\n大多数时候，促成买方掏钱的最好办法不是让买家看到有获利的可能，而是让他们感到失去机会的恐惧。对于买家来说，最强的收购动机是看到竞争对手收购你。\n\n冷战、第二次世界大战、近代的大多数战争都说明了这个道理。要鼓励大家去创业。只要懂得藏富于民，国家就会变得强大。让书呆子保住他们的血汗钱，你就会无敌于天下。\n\n五岁时，我不知道电力是电厂生产的，以为插座就是发电的地方。同样，很多孩子以为财富是直接从父母口袋里流出来的 ，不知道财富是创造出来的。\n\n技术的发展加大了贫富差距，这是不是一个社会问题？好像没有那么严重。技术在加大了收入差距的同时，缩小了大部分的其他差距。\n\n只要你开始思考这些问题，你就会发现，众多不同科学对“美”的认识有着惊人的相似度。优秀设计的原则是许多学科的共同原则，一再反复地出现。\n\n好的设计是简单的设计，在数学中，它表示简短的证明往往是更好的证明。对于建筑师和设计者，它意味着美依赖于一些精心选择的结构性元素，而不依赖于表面装饰品的堆砌，在写作上，这种说法意味着只说必须要说的话，并且说得简短。\n\n当你攀登高山时，必须扔掉一切不必要的装备，在困难地点或预算不足的条件下，建筑师就只能做出很简练的设计。当解决难题成为压倒一切的任务时，那些流行样式与华丽服饰就被抛到一边去了。\n\n并非所有的痛苦都是有益的。世界上有有益的痛苦，也有无益的痛苦。你需要的是咬牙向前冲的痛苦，而不是被钉子扎破脚的痛苦。\n\n只有在成为某个领域的专家之后，你才会听到心里又一个细微的声音说：“这样解决太糟糕了！一定有更好的选择。”不要忽视这种声音，要培育它们。优秀作品的秘诀就是：非常严格的品味，再加上实现这种品味的能力。\n\n你的乐观主义和怀疑倾向分别针对两个不同的对象。你必须对解决难题的可能性保持乐观，同时对当前解法的合理性保持怀疑。\n\n做出优秀成果的人，在做的过程中常常觉得自己做的不够好。其他人看到他们的成果觉得棒极了，而创造者本人看到的都是自己作品的缺陷。这种视角的差异并非偶然，因为只有对现状不满，才会造就杰出的成果。\n\n如今，几乎所有的美术老师都会告诉你准确画出一个事物的方法，不是沿着轮廓慢慢一个部分、一个部分地把它画出来，因为这样的话各个部分的错误会积累起来，最终导致政府画失真。你真正应该采用的方法是快速地用几根线画出一个大致准确的轮廓，然后再逐步地加工草稿。\n\n——over了——","mtime":1398413418000,"source":"_posts/《黑客与画家》-文摘.md"},"kbkyjszi0lamzgkh":{"_id":"kbkyjszi0lamzgkh","content":"title: \"之前的博客header用的照片\"\nid: 164\nlayout: photo\ndate: 2012-03-15 22:13:12\ntags: \n- 影像\nphotos:\n- /uploads/2012/09/wish.jpg\n- /uploads/2012/09/sunset.jpg\n- /uploads/2012/09/houhai-3.jpg\n- /uploads/2012/09/butterfly.jpg\n- /uploads/2012/09/board.jpg\n---\n\n照片都是我过去拍的，想来我这真是多久没好好拍过照片了。\n\n新博客暂时没有那个照片header了，所以也只能在这里看看了\n<!-- more -->\n\n[![北京孔庙](/uploads/2012/09/wish-300x86.jpg \"北京孔庙\")](/uploads/2012/09/wish.jpg) 北京孔庙，一个架子上挂满了来这里许愿的痕迹\n\n[![日落](/uploads/2012/09/sunset-300x86.jpg \"日落\")](/uploads/2012/09/sunset.jpg) 家乡黔西，日落时分的玉米林\n\n[![后海](/uploads/2012/09/houhai-3-300x86.jpg \"后海\")](/uploads/2012/09/houhai-3.jpg) 北京后海，天气很好\n\n[![蝴蝶](/uploads/2012/09/butterfly-300x86.jpg \"蝴蝶\")](/uploads/2012/09/butterfly.jpg) 也来自家乡黔西\n\n[![告示牌](/uploads/2012/09/board-300x86.jpg \"告示牌\")](/uploads/2012/09/board.jpg) 北京天文馆旁边的小路，有点意思\n","mtime":1398413418000,"source":"_posts/之前的博客header用的照片.md"},"x7e1k5mj0uqyzmul":{"_id":"x7e1k5mj0uqyzmul","content":"title: \"[伪HOWTO]如何写简历\"\nid: 215\ndate: 2012-10-16 01:28:33\ntags: \n- 站着说话不腰疼\n---\n\n这是一篇[伪HOWTO]，意味着你**不能**从这篇文章中学会：\n\n1.  如何写简历\n2.  如何写简历\n3.  以及-如何-写简历\n\n那这篇文章存在的意义是什么呢？\n其实是最近在参与校招了，之前也有过一些学校师兄邀请过分享经验，所以\n本文将从一个**[简历作者->简历读者]**的身份转换过程，以我自己过去的简历为例子，分享一些关于写简历的经验。\n求职方向是技术性岗位（研发）\n<!--more-->\n\n分享一下我的（应届生）简历，请无视里面的马赛克\n[![Liu Ji's Resume](/uploads/2012/10/Liu-Jis-Resume-223x300.jpg \"Liu Ji's Resume\")](/uploads/2012/10/Liu-Jis-Resume.jpg)\n\n[![Liu Ji's Resume - CN](/uploads/2012/10/Liu-Jis-Resume-CN-232x300.jpg \"Liu Ji's Resume - CN\")](/uploads/2012/10/Liu-Jis-Resume-CN.jpg)\n\n这份简历是根据一个国外的简历模板改的，因为当时也投递了外企，所以做了中英两份，先说一下几个通用的要素：\n\n1.  **控制篇幅**\n我写简历的时候，在强烈的精神洁癖的作用下，我早早就决定要坚决控制在一页以内；现在作为一名简历读者，我对于长篇幅的简历耐受性不断下降。\n2.  **突出重点**\n这是应届生的简历，所幸我有在校期间的项目经历，所以毫无疑问项目经历写在了上面，后面的内容顺序也经过了斟酌。\n3.  **弱化非重点**\n与上一条对应，对于企业而言，大概真的不在乎我的民族和QQ神马的，那又为什么要放上来占篇幅呢？\n4.  **利用空间**\n合理地利用空间，去掉边距的话，一张A4纸是很小的，排太满会很难看，利用长短相宜的分隔线和粗体，能有效带领读者吸收内容。\n5.  **讲究布局**\n横向罗列的辨识度和纵向罗列完全不在一个级别上，重要的东西一定不能横向排列，为此可以在别的地方做布局上的让步。\n\n**然后说一下一些我的理解和细节**\n\n*   动起手来，别说外国的月亮圆，可事实上好的模板大多是国外的，可惜很多就一幅图，看中了的话就要自己“高仿”一个出来；说实在话我真心没找到能让人满意的doc格式的简历模板。\n*   突出姓名，我觉得让面试官仅仅看简历就能记住我，靠贴张照片上去完全没有用，以我的长相，估计还会扣分，所以我把名字弄得很大，也许会有点效果吧。<del datetime=\"2012-10-15T15:45:32+00:00\">我到现在还耿耿于怀名字没有弄的更大</del>\n*   加上英文名，有的人或者公司在工作中喜欢称别人英文名，留下英文名，别人称呼我的时候或许会多那么一丁丁点“熟人”的感觉吧。\n*   言简意赅，对于项目经历我并没有像有的朋友一样把整个项目介绍全部写上去，根据我现在阅读简历的感受我觉得这么做是对的，读者真的没什么工夫读每个项目两百字的介绍，而且两百字也说不明白，两千字都未必够。我的选择是，仅仅写上项目本身和核心技术点的描述——就像写学术论文的标题一样，然后等面试官来问我这是什么。\n*   使用非衬线字体，作为win用户，我一直羡慕mac的字体渲染效果。我使用了微软雅黑，它看起来比宋体更优雅一些，这就味着不能用doc格式了，因为读者的电脑可能并没有这个字体，所以内嵌字体的PDF是更好的选择——但选择PDF的直接原因我会在后面说。\n*   ↑继续上一条，调整字号，在打印、22寸左右的台式机屏幕、笔记本电脑三者之间取得一个平衡。\n*   由于布局略显奇葩，我没有用word排版，作为一名前端开发者，我用HTML+CSS来做这个工作，然后把网页转换成PDF（这是用PDF格式的原因）；多实验，选择好的浏览器和PDF虚拟打印机，否则字体没有亚像素渲染，会有难看的毛边。\n*   原模板的每一项左侧都是空的，我把这个地方利用来放置年份和项目名称。\n*   搞清楚读者想看什么，我投递的是技术性的岗位，社会工作的经历我一条都没有写，因为我觉得面试官不会对我去帮助老人、奥运志愿者、实习HR什么的感兴趣。\n*   量化，对应届生而言，四六级分数、GPA、年级排名可以有效的说明我大学没有混日子，而项目经历以及技能方面的训练则说明我能干活。\n*   ↑报喜不报忧，如果我六级只考了400多分那我会写“通过六级”，如果我考了雅思但是只有5分我宁愿不写。\n*   不“摆摊”，大学期间拿过很多奖，但是我觉得“三好学生”跟找个技术性的工作其实没多大关系；与此同理，我没有把word, ppt, photoshop写进技能一栏——即使它们都是必备技能。\n*   不怂，把优点展现在最显眼的位置——这里我认为有一种心理，写在上面的项目经历也许容易被面试官提问，而这正是我的强项，谁不想在面试的时候能聊在自己擅长的东西？\n*   ↑也不骄傲，<del datetime=\"2012-10-15T15:45:32+00:00\">其实是我怂了，</del>没敢写“精通”两个字上去。\n*   不写文章，我看到某些简历上自我鉴定写了挺大一段，起承转合，文采卓越，可惜我感觉面试官真心没工夫看它。\n*   英文简历方面，不好说，我比较拘谨，不敢用自己看不懂的单词……\n*   用连字符让电话号码更便于阅读，为Email和博客地址加上超链接。\n\n**小结**一下吧：\n我认为一份好的简历可以有效的引导面试（至少是一面）的进行，如果简历中能够把亮点展现出来，那么面试官会更容易找到面试的切入点，我自己引领这个方向，一定程度上是可以避免面试跑偏。\n个人感觉技术性岗位的简历是很好写的，80%放在技术上，20%留给其他就OK了，不知道其他岗位的简历写起来是什么感受……\n\n元芳，你怎么看？\n","mtime":1398413418000,"source":"_posts/伪howto-如何写简历.md"},"ljcqjevcbctdenas":{"_id":"ljcqjevcbctdenas","content":"title: \"[伪HOWTO]如何写简历\"\nid: 215\ndate: 2012-10-16 01:28:33\ntags: \n- 站着说话不腰疼\n---\n\n这是一篇[伪HOWTO]，意味着你**不能**从这篇文章中学会：\n\n1.  如何写简历\n2.  如何写简历\n3.  以及-如何-写简历\n那这篇文章存在的意义是什么呢？\n其实是最近在参与校招了，之前也有过一些学校师兄邀请过分享经验，所以\n**本文将从一个<span style=\"color:#f60;\">[简历作者->简历读者]</span>的身份转换过程，以我自己过去的简历为例子，分享一些关于写简历的经验。**\n求职方向是技术性岗位（研发）\n<!--more-->\n\n分享一下我的（应届生）简历，请无视里面的马赛克\n[![Liu Ji's Resume](http://jimliu.net/wp-content/uploads/2012/10/Liu-Jis-Resume-223x300.jpg \"Liu Ji's Resume\")](http://jimliu.net/wp-content/uploads/2012/10/Liu-Jis-Resume.jpg)\n\n[![Liu Ji's Resume - CN](http://jimliu.net/wp-content/uploads/2012/10/Liu-Jis-Resume-CN-232x300.jpg \"Liu Ji's Resume - CN\")](http://jimliu.net/wp-content/uploads/2012/10/Liu-Jis-Resume-CN.jpg)\n\n这份简历是根据一个国外的简历模板改的，因为当时也投递了外企，所以做了中英两份，先说一下几个通用的要素：\n\n1.  **控制篇幅**\n我写简历的时候，在强烈的精神洁癖的作用下，我早早就决定要坚决控制在一页以内；现在作为一名简历读者，我对于长篇幅的简历耐受性不断下降。\n2.  **突出重点**\n这是应届生的简历，所幸我有在校期间的项目经历，所以毫无疑问项目经历写在了上面，后面的内容顺序也经过了斟酌。\n3.  **弱化非重点**\n与上一条对应，对于企业而言，大概真的不在乎我的民族和QQ神马的，那又为什么要放上来占篇幅呢？\n4.  **利用空间**\n合理地利用空间，去掉边距的话，一张A4纸是很小的，排太满会很难看，利用长短相宜的分隔线和粗体，能有效带领读者吸收内容。\n5.  **讲究布局**\n横向罗列的辨识度和纵向罗列完全不在一个级别上，重要的东西一定不能横向排列，为此可以在别的地方做布局上的让步。\n\n**然后说一下一些我的理解和细节**\n\n*   动起手来，别说外国的月亮圆，可事实上好的模板大多是国外的，可惜很多就一幅图，看中了的话就要自己“高仿”一个出来；说实在话我真心没找到能让人满意的doc格式的简历模板。\n*   突出姓名，我觉得让面试官仅仅看简历就能记住我，靠贴张照片上去完全没有用，以我的长相，估计还会扣分，所以我把名字弄得很大，也许会有点效果吧。<del datetime=\"2012-10-15T15:45:32+00:00\">我到现在还耿耿于怀名字没有弄的更大</del>\n*   加上英文名，有的人或者公司在工作中喜欢称别人英文名，留下英文名，别人称呼我的时候或许会多那么一丁丁点“熟人”的感觉吧。\n*   言简意赅，对于项目经历我并没有像有的朋友一样把整个项目介绍全部写上去，根据我现在阅读简历的感受我觉得这么做是对的，读者真的没什么工夫读每个项目两百字的介绍，而且两百字也说不明白，两千字都未必够。我的选择是，仅仅写上项目本身和核心技术点的描述——就像写学术论文的标题一样，然后等面试官来问我这是什么。\n*   使用非衬线字体，作为win用户，我一直羡慕mac的字体渲染效果。我使用了微软雅黑，它看起来比宋体更优雅一些，这就味着不能用doc格式了，因为读者的电脑可能并没有这个字体，所以内嵌字体的PDF是更好的选择——但选择PDF的直接原因我会在后面说。\n*   ↑继续上一条，调整字号，在打印、22寸左右的台式机屏幕、笔记本电脑三者之间取得一个平衡。\n*   由于布局略显奇葩，我没有用word排版，作为一名前端开发者，我用HTML+CSS来做这个工作，然后把网页转换成PDF（这是用PDF格式的原因）；多实验，选择好的浏览器和PDF虚拟打印机，否则字体没有亚像素渲染，会有难看的毛边。\n*   原模板的每一项左侧都是空的，我把这个地方利用来放置年份和项目名称。\n*   搞清楚读者想看什么，我投递的是技术性的岗位，社会工作的经历我一条都没有写，因为我觉得面试官不会对我去帮助老人、奥运志愿者、实习HR什么的感兴趣。\n*   量化，对应届生而言，四六级分数、GPA、年级排名可以有效的说明我大学没有混日子，而项目经历以及技能方面的训练则说明我能干活。\n*   ↑报喜不报忧，如果我六级只考了400多分那我会写“通过六级”，如果我考了雅思但是只有5分我宁愿不写。\n*   不“摆摊”，大学期间拿过很多奖，但是我觉得“三好学生”跟找个技术性的工作其实没多大关系；与此同理，我没有把word, ppt, photoshop写进技能一栏——即使它们都是必备技能。\n*   不怂，把优点展现在最显眼的位置——这里我认为有一种心理，写在上面的项目经历也许容易被面试官提问，而这正是我的强项，谁不想在面试的时候能聊在自己擅长的东西？\n*   ↑也不骄傲，<del datetime=\"2012-10-15T15:45:32+00:00\">其实是我怂了，</del>没敢写“精通”两个字上去。\n*   不写文章，我看到某些简历上自我鉴定写了挺大一段，起承转合，文采卓越，可惜我感觉面试官真心没工夫看它。\n*   英文简历方面，不好说，我比较拘谨，不敢用自己看不懂的单词……\n*   用连字符让电话号码更便于阅读，为Email和博客地址加上超链接。\n\n**小结**一下吧：\n我认为一份好的简历可以有效的引导面试（至少是一面）的进行，如果简历中能够把亮点展现出来，那么面试官会更容易找到面试的切入点，我自己引领这个方向，一定程度上是可以避免面试跑偏。\n个人感觉技术性岗位的简历是很好写的，80%放在技术上，20%留给其他就OK了，不知道其他岗位的简历写起来是什么感受……\n\n元芳，你怎么看？","mtime":1398413418000,"source":"_posts/伪howto如何写简历.md"},"h3g04y72mbrm290g":{"_id":"h3g04y72mbrm290g","content":"title: \"[伪转载]GIF速度的那些事儿\"\nid: 57\ndate: 2012-06-04 22:05:59\ntags: \n- 编程\n---\n\n有时候会发现，在IE下面看着挺好的GIF动画，到Firefox或者Chrome里就会跟抽疯了似的。\n\n比如新浪微博的鼓掌表情![](http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/36/gza_org.gif)和兔斯基揉脸的表情![](http://ww4.sinaimg.cn/large/6e3cfcf1gw1dnkvq7h3jcg.gif)。\n\n~~虽然一旦接受了这种设定，似乎还挺带感儿的~~，但是身为一名2B程序员，在高呼一声：“这不科学啊！”的同时，还是要找寻其中的原因。\n\n<!--more-->其实已经有人早就通过实验证明了[[不存在的网站](http://coolcd.blogspot.com/2009/03/firefoxiechrome-gif.html)][[免梯子版](http://eikolog.sinaapp.com/archives/20/)]。\n\n**[结论党醒目]**\n这里我就直接说下结论：\n\n* IE里如果一帧的时间在60ms以上，正常显示；Firefox/Chrome里也正常，这种情况下，两者的播放速度是一样的。\n* 遇到一帧的时间在50ms或者更低的时候，IE就萎了，速度会自动降到一帧100ms！\n* 而Firefox/Chrome则需要降到10ms或者更低的时候，才会拉到100ms。\n* 这样如果一帧的时间介于10ms~50ms之间的时候，IE里就会比实际速度要慢，而Firefox/Chrome里则是正常。\n* 这样如果以IE为基准制作出的GIF图片，速度又介于这个区间，放到Firefox/Chrome里看就会抽疯。\n\n细心一点的话会发现把符合这个条件的GIF图片弄进QQ里当表情，速度也是慢的。所以我估计这不是IE的问题，而是Windows系统自己的GIF库就有这问题，可能计时器精度不够啊神马的，而Firefox/Chrome则是用了自己的GIF库，就没有遇到这个问题了。\n\n所以看来搞图的也要玩玩兼容性……","mtime":1398413418000,"source":"_posts/伪转载-gif速度的那些事儿.md"},"co50zs8h3mz7qn6e":{"_id":"co50zs8h3mz7qn6e","content":"title: \"使用hexo搭建静态博客\"\nlayout: post\ndate: 2013-09-08 12:00:00\ntags: \n- 编程\n---\n\n[hexo](http://zespia.tw/hexo/)是一个博客程序，拥有一个简单的服务器（可以用来当简单的动态博客使用），也有生成器，生成的静态文件可以一键部署到Github Pages上，也可以部署到任意静态文件服务器上面。\n\n由于它相当简约，并且使用Markdown来编写文章，深得我心，于是我把博客迁移到hexo了，但是为了国内访问速度，我没有放在Github Pages上，而是选择了放在BAE上面。\n\n下面一步一步地说怎么用hexo搞一个博客。\n<!-- more -->\n\n## 搭环境\n\nhexo是用[node.js](http://nodejs.org/)开发的，首先需要在电脑上安装node.js，在windows用安装包是很方便的，完成后记得要把系统盘的`用户/AppData/Roaming/npm/`这个目录加到系统的`PATH`环境变量里面。\n\n在需要的地方打开命令行，这时候我们要安装hexo\n```\nnpm install -g hexo\n```\n安装了hexo后，如果之前有做`PATH`环境变量那一步操作的话，这时候就可以直接运行`hexo`这个命令了，后面的工作都要靠它。\n\n## 新建博客\n\n在工作目录打开命令行，运行\n```\nhexo init <目录名>\n```\n会生成个目录，`cd`进去，可以看到很多东西，这就是一个全新的hexo博客。\n\n后面我们的命令行就都在这个新建的目录下了。\n\n运行\n```\nhexo server\n```\n会看到服务在`4000`端口上启动了，打开http://localhost:4000/ 就能看到效果。\n\n## 调整设置\n\n对于站点的配置基本上都在`_config.yaml`里面，其中比较重要的有\n\n* `title`, `subtitle` 这类基本信息\n* `language` 可以用`zh-CN`，这在后面的theme配置当中有作用\n* `url`, `root` 填以后要布的域名和路径\n* `plugins` 我加了一个`hexo-generator-feed`，通过`npm install hexo-generator-feed --save`安装，这样在生成的时候会自动生成`atom.xml`，用来提供别人订阅\n\n修改`_config.yaml`的话有时候是需要重新启动`hexo server`才能看到效果的。\n\n## 编写文章\n\n这个时候的博客空空如也，如何新建文章呢？可以使用hexo提供的Scaffold（脚手架）功能。\n```\nhexo new post 文章标题\n```\n就会在`/source/_post`目录里新建一个markdown文件，这里的`post`就是普通的文章类型，看看`scaffolds`目录里，有几个类型，可以自己尝试一下。\n\n写好内容后去浏览器里刷新一下，发现`hexo server`是有自动生成功能的，可以看到新的文章。\n\n这里就和Word Press很不一样了，以前都是所见即所得的写文章，而现在是写markdown，看生成出来的效果。可能需要适应一下。\n\n如果是Word Press用户的话，可以有办法把上面的内容迁移过来。\n\n首先，需要在Word Press导出博客，会得到一个xml文件，把它拷贝到hexo博客目录下，比如叫`wordpress.xml`。\n\n安装hexo-migrator-wordpress这个插件\n```\nnpm install hexo-migrator-wordpress --save\n```\n这时候运行\n```\nhexo migrate wordpress wordpress.xml\n```\n会看到导入了一些Word Press里的文章和页面，看看`source`里的文件，发现给转成了markdown格式的，这时候多半还需要一些格式微调。另外，文章里面的图片会指向原来的博客资源，文章链接也是绝对的，不嫌麻烦的话，这些东西最好也迁过来吧。我在`source`目录下建了`uploads`目录，结构基本上和之前的Word Press一模一样，所以大多数东西只用改下路径就行了。\n\n现在再刷新看看效果吧。\n\n值得一说的是，hexo对于文章分类的处理和Word Press很不一样，我原来的文章都同时属于好几个category，但hexo里的分类是纯粹树形的。所以我彻底放弃了category管理，而全部用tag。\n\n## 部署博客\n\n如果你使用Github Pages来部署，会非常简单，首先当然电脑上要装了Git。在`_config.yaml`里找到`deploy`一节，`type`填`github`，写上`repository`是你在Github上的Repo地址。\n```\nhexo deploy --generate\n```\n这时候会先进行一次完整生成，然后会自动部署到Github的`gh-pages`分支上面。为了管理博客源代码，可以把整个hexo目录放在对应Repo的`master`分支上，然后就像管理一般的开源项目一样处理就好了。\n\n我不使用Github Pages来放，是因为部署上去要等10来分钟才能看到效果，而且国内速度比较一般。\n\n如果你有网站空间，静态空间就可以，那么运行\n```\nhexo generate\n```\n后，把`public`目录的内容扔到你的空间上去就行了。\n\n后面我会再说下怎么弄到BAE上。\n\n## 调整样式\n\n默认的theme叫light，已经很不错了，但是有的内容不大“符合国情”，所以需要进行一些调整。\n\n主题都在`themes`目录下面，按主题名字分，可以在`_config.yaml`里选择喜欢的主题，改个配置就行。可以在官方网站上找到其他主题，数量不多，但是都挺精彩的，下载下来放在`themes`目录里就行。\n\n打开`/themes/light/_config.yaml`可以看见里面也有一些主题自己的配置，这主题配置说起来话就长了，捡重点的。\n\n`menu`是配置右上角的链接，如果你加了一个`page`，那么是需要在这里配进去才能看到的。\n\n`addthis`我给去掉了，因为都是些外国的社交网站，似乎没啥搞头。\n\n至于我的博客右边那堆widget，一部分是light自带的，一部分是我自己开发的。我已经把light的Github分支给fork出来了，有兴趣可以去[看看](https://github.com/LiuJi-Jim/hexo-theme-light)，如果用那个分支的代码的话，下面的这堆修改已经都整合进去了，瞟一眼就明白了。\n\nlight主题自带Google Analytics支持，但我没用GA所以没研究。为了使用百度统计，我在`layout/_partial/after_footer.ejs`里加入了百度统计的代码。\n\nWord Press有评论功能，而静态博客的评论咋搞呢？我使用了[多说](http://duoshuo.com/)社会化评论框，号称社会化，其实就是和微博这类的社交网络有一定的关联性。\n\n如何申请使用多说评论框，我就不多说了，下面说下如何在light主题里面安装。\n\n首先在`layout/_partial/`下新建一个`duoshuo.ejs`，内容如下：\n```\n<!-- Duoshuo Comment BEGIN -->\n<div class=\"ds-thread\" data-title=\"<%= item.title %>\" data-url=\"<%- item.permalink %>\"></div>\n<script type=\"text/javascript\">\nvar duoshuoQuery = {short_name:\"jimliu-net\"};\n(function() {\n    var ds = document.createElement('script');\n    ds.type = 'text/javascript';ds.async = true;\n    ds.src = 'http://static.duoshuo.com/embed.js';\n    ds.charset = 'UTF-8';\n    (document.getElementsByTagName('head')[0] \n    || document.getElementsByTagName('body')[0]).appendChild(ds);\n})();\n</script>\n<!-- Duoshuo Comment END -->\n```\n基本上就是在多说网站上拿到的`通用代码`，在第二行上我加入了`data-title`和`data-url`，用来给多说传一些参数。\n`data-url`这个参数可以让多个域名上的文章评论共享，只要同一篇文章的`data-url`固定就可以。例如`blog.jimliu.net`和`jimliu.net`上文章的`data-url`都是`http://jimliu.net/xxxxxxx`这样两个域名就可以共享评论了。\n第四行的`short_name`是自己多说代码独有的，不要照抄哦。\n\n接下来在`layout/post.ejs`下面，加入一行\n```\n<%- partial('_partial/duoshuo', {item: page, index: false}) %>\n```\n就能在文章页面看到评论框了，如果想在其他`page`，例如我博客右上角那个“About、Feedback”里面也看到的话，对`layout/page.ejs`如法炮制即可。","mtime":1398413418000,"source":"_posts/使用hexo搭建静态博客.md"},"p17u2dmb4fj70ygq":{"_id":"p17u2dmb4fj70ygq","content":"title: \"博客header图片\"\nid: 164\ndate: 2012-03-15 22:13:12\ntags: \n- 影像\n---\n\n照片都是我过去拍的，想来我这真是多久没好好拍过照片了。\n\n[![北京孔庙](http://jimliu.net/wp-content/uploads/2012/09/wish-300x86.jpg \"北京孔庙\")](http://jimliu.net/wp-content/uploads/2012/09/wish.jpg) 北京孔庙，一个架子上挂满了来这里许愿的痕迹\n\n[![日落](http://jimliu.net/wp-content/uploads/2012/09/sunset-300x86.jpg \"日落\")](http://jimliu.net/wp-content/uploads/2012/09/sunset.jpg) 家乡黔西，日落时分的玉米林\n\n[![后海](http://jimliu.net/wp-content/uploads/2012/09/houhai-3-300x86.jpg \"后海\")](http://jimliu.net/wp-content/uploads/2012/09/houhai-3.jpg) 北京后海，天气很好\n\n[![蝴蝶](http://jimliu.net/wp-content/uploads/2012/09/butterfly-300x86.jpg \"蝴蝶\")](http://jimliu.net/wp-content/uploads/2012/09/butterfly.jpg) 也来自家乡黔西\n\n[![告示牌](http://jimliu.net/wp-content/uploads/2012/09/board-300x86.jpg \"告示牌\")](http://jimliu.net/wp-content/uploads/2012/09/board.jpg) 北京天文馆旁边的小路，有点意思","mtime":1398413418000,"source":"_posts/博客header图片.md"},"tafugnponjs2wihn":{"_id":"tafugnponjs2wihn","content":"title: \"我在w3ctech 2012 Mobile专题会议上的分享\"\nid: 92\ndate: 2012-07-02 22:27:47\ntags: \n- 编程\n---\n\n6月16号，我在[w3ctech 2012 Mobile专题会议](http://w3ctech.com/2012)上做了一场名为“移动WebApp开发实践”，这里是分享的PPT与视频。\n<a href=\"http://www.w3ctech.com/css/images/m2012/subject_bg.png\" target=\"_blank\"><img src=\"http://www.w3ctech.com/css/images/m2012/subject_bg.png\" alt=\"w3ctech 2012 Mobile专题会议\" title=\"Cover\" style=\"max-width:640px;\"></a>\n希望与大家多交流。\n\n视频（优酷）：[第一段](http://v.youku.com/v_show/id_XNDE5Nzg3Mzcy.html?f=17763083)、[第二段](http://v.youku.com/v_show/id_XNDE5NjgxNjIw.html?f=17763083)、[第三段](http://v.youku.com/v_show/id_XNDE5NzQ4OTE2.html?f=17763083)\n\nPPT下载地址：[百度文库](http://wenku.baidu.com/view/dd0f34ea4afe04a1b071de4f.html)、[微盘](http://vdisk.weibo.com/s/7567B/1339904231)","mtime":1398413418000,"source":"_posts/我在w3ctech-2012-mobile专题会议上的分享.md"},"gvqu9b07mgverfbr":{"_id":"gvqu9b07mgverfbr","content":"title: \"我眼中那些（因为滥用）而被毁掉的警句\"\nid: 46\ndate: 2012-06-02 13:29:16\ntags: \n- 站着说话不腰疼\n---\n\n排名不分先后\n\n* **做自己想做的，不要在乎别人的眼光。**\n  ——犯贱的时候最容易拿这句话出来说事。\n\n* **只要还有希望就永远不要放弃。**\n  ——这叫不撞南墙不回头吗？\n\n* **不要重复发明轮子。**\n  ——这个更厉害，后来直接说成不要重复造轮子了。\n\n* **先做好自己的事情再去评价别人。**\n  类似的还有：**你做的很完美吗？有什么资格评论别人？**\n  引申的：**你说的这么好，要不换你上？**\n  ——嘴上说说都不让了，合着照这个逻辑的话什么体育评论员这类的职业可以全部玩儿蛋去了。\n\n喷完了，暂时就先这样吧……\n\n<span style=\"color:#999;\">当然也可能是因为滥用了而毁掉了我！！</span>","mtime":1398413418000,"source":"_posts/我眼中那些（因为滥用）而被毁掉的警句.md"},"6ptbf3iv0976e58w":{"_id":"6ptbf3iv0976e58w","content":"title: \"我这6年来的成长与倒退，暨《黑客与画家》读后感\"\nid: 139\ndate: 2012-09-26 11:34:31\ntags: \n- 站着说话不腰疼\n- 编程\n---\n\n先搞了一篇[《黑客与画家》](http://www.ituring.com.cn/book/39 \"书籍介绍\")的[文摘](/2012/09/25/《黑客与画家》-文摘/)，然后这里是读后感，说是“读后”感，其实很多内容都是我一直在思考的内容，只不过借这个机会一起谈一下。\n<!--more-->\n\n书的前部分用了不少的篇幅来为“书呆子”正名，不管是别人说还是我自己都认为我就是个“书呆子”，做事一根筋，讲理不讲情；喜欢脱离人群之外。其实根据我自己的体会，“书呆子”心理通常会有一种优越感，体现在于“你不懂我”的心理暗示。这么说来，通过语言文字为书呆子正名反而是没有必要的。就好比对于geek程序员而言，评价的标准只有3个：运行时间、占用内存、代码长度，这就够了。\n\n当你做一件别人不认可的事情的时候，比较大的可能性是你错了，但也有一定可能性是大家都错了，而你是对的。黑客的价值在于他们敢于承担可能的批判，而去做一些常人眼里看来“叛逆”的事情，这当中蕴涵了改变世界的契机。07年暑假的时候我曾经带头闹事过一回，与现在相比似乎当时更有黑客精神，回头想想觉得当时很幼稚，这也许是变成熟的信号，同时也可能是变平庸的信号。\n\n在关于“财富”的篇章中，很明显作者是在鼓励优秀的书呆子去创业。书呆子通常充满改变世界的能量，但苦于社交上的不足，难以释放能量。以财富为吸引，也许是引爆书呆子能量的一种好方法。不过我个人觉得这一部分写得太有成功学色彩了，而我个人很不喜欢成功学。\n\n但不得不说这些段落还是引发了我很多共鸣，在我放弃保研的时候，最大的动力就在于不安心于过“安稳但无激情”的生活，这也是和父母分歧最大的地方，父母在乎“安稳”，并不在乎“激情”，但我很在乎，最终我利用他们对我的宠溺打胜了这一仗：P 尽管最终没考上清华，但这样的精神是我非常珍惜的，打破现有的格局，扔掉到手或即将到手的东西，去追求更大的价值，这就是创业精神。\n\n书中有一段很有意思，讲述财富是由人创造出来的，其实我一直以来非常赞同这一点。有一年回家的时候，家乡风行十字绣，老妈也不能免俗，她告诉我绣完成以后通常可以卖不少钱。当时就有这种理解，手工业是一种典型的放大过程，通过劳动力和创造力对简单的原材料进行加工，成品的价值会被放大很多倍，这让我很相信财富是可以被创造出来的。\n\n书中说“目前还存在的最大的手工艺人群体就是程序员”，此言不虚，对于程序员而言，生产资料的成本非常之低——电脑一台：在这个信息时代，电脑已经是必需品；开发工具：开源软件给我们充分的选择，购买商业开发工具的价格也不会像购买一座机床那么夸张；一杯咖啡，零食若干：仅仅是为了让思考的时候手不闲着。如此低廉的成本，仅仅通过在键盘上敲代码，就可以创造出活生生的程序，甚至创造出巨大的价值，这样的现象真是匪夷所思。\n\n关于“设计”的篇章，让我找到了很多共鸣。大一的时候，我在学校帮老师做网页设计，当时我做的还不错，但一到了要我做海报的时候，我就不行了。我喜欢简约的设计，可这样的设计放在海报上的话，如果没有非常高的水平，结果只能造成海报看起来像大字报一样，没有视觉冲击力。设计有共识，但不同领域的设计，也有独特的哲学。\n\n前几天看了一个纪录片，讲述大自然中各种神奇的结构，比如人类、爬行动物、鸟类、昆虫等等的结构，以及各种植物中的神奇结构，让我深深体会到完美的系统并不是靠设计所能得来的，而是进化。\n\n“设计”应该是一个动词、一种手段。 具体的说，是一种帮助进化的手段。在纯粹的自然界中，进化更多的依赖于自然选择。放到现实社会里，并不合适，因为自然选择需要太长的时间。这时候设计可以成为一种辅助手段，通过设计人为的进行选择和改造，加速进化的过程。如果设计本身取代了进化，那就是本末倒置了。\n\n进化是迭代的过程，每一次做完一件事情，肯定是会留下遗憾的。对我自己而言，OJ如此、论坛如此、毕业论文如此、iOS软件搜索亦然。 每一次留下的遗憾其实就是下一轮迭代的动力源泉——你想把事情做的更好、想弥补过去的遗憾，于是有了新的思路，可以对它进行改造。\n\n软件开发中讲究“Refactory to Patterns” ，我对这句话的理解是：模式并不是靠设计而得来的，是靠重构而得来的。“重构”在这里就是一种“进化”。在过去的开发经历中，我常常在开发初期就推翻一开始的构思，重新设计；后来越发走向两个极端——或是贪大求全、或是草草了事。不论是来自于排期的压力还是懒惰，这种现象都警告着我geek精神的流失。\n\n回到“设计”，设计应该会取舍，现在业界流行称为“做减法”。我的理解在于弄清楚什么东西主要，什么东西次要。书中说：“当你攀登高山时，必须扔掉一切不必要的装备，在困难地点或预算不足的条件下，建筑师就只能做出很简练的设计。当解决难题成为压倒一切的任务时，那些流行样式与华丽服饰就被抛到一边去了。 ”\n\n音乐圈子里有这么一句话：“鸟枪换炮日，罗郎才尽时。”这句话本意是说罗大佑在拿着一把吉他的时候写出了很多好歌，而工作室换了很好的设备以后，条件好了，反而没有出彩的作品了。\n\n在和[licstar](http://weibo.com/licstar \"@licstar的微博\")开发[OJ](http://coder.buct.edu.cn/)的时候，从0开始，没有太多参考的东西（那时候国内的OJ很少），也没有退路。在这样的条件下反而把事情做出来了，而后来想对OJ进行重构的时候则动力不足，因为有选择、有退路了。\n\n突然觉得如果事关人命的话，那会不会真的写出没Bug的程序？当然世界上没有不犯错的人，但我们应该总以最高的标准来要求，并且要抛弃掉一切可有可无的东西，从最本源的地方入手。\n\n文章大概就到这里了，猛然发现已经2000字。回首这6年，从不会编程到geek程序员；从兴趣驱动到职业码农；从电脑玩家到开发者，转变不可谓不大。\n\n这些转变中，有变好了，也有变差了。失去的东西中有很多是很珍贵的，我一定要寻找回来。","mtime":1398413418000,"source":"_posts/我这6年来的成长与倒退，暨《黑客与画家》读后感.md"},"fy2cwrcua1e1qgcu":{"_id":"fy2cwrcua1e1qgcu","content":"title: \"话痨的生日\"\nid: 176\ndate: 2012-08-24 20:12:11\ntags: \n- 站着说话不腰疼\n- 生活\n---\n\n今天是我24岁生日。\n\n在这几个月来，感觉日子过的非常的快，也许是戒酒了，也许是搬家了，也许是业务调整，总感觉生活平平淡淡，心情没有大起大落，喜怒不形于色。微博上、群里很话痨，生活中很低调。\n\n前些日子的一段时间里，我的完美主义情节泛滥到了无以复加的程度，记得端午节去参加了一个老乡聚会，认识几个新朋友，对我的评价是我每一句话都必须经过了大脑思考，一个措辞都不愿意有误，宁愿停下来组织语言，也不愿意吐出一个“呃”音。当时大家都笑我说，我们语速这么快，你听得清吗，我只能笑笑。\n\n这种“过度思考”，很多时候阻滞了我的行动（包括在写这篇玩意的时候，还在继续这种一个词都不愿意用错的状态）。\n\n在忙碌的生活中，生日这一天也许很重要，也许很不起眼。朋友说生日很特殊，我说有啥特殊的，年年都有；人家说：那每年也只有一天啊；我说：那一年到头来的每一天，一年都只有一天。\n\n如果真的做到把每一天都看得很特殊，可能行动力就不会这么差了。\n\n前几天看到条接龙的微博，意思大概是你最不愿意丢掉的三样东西；正好@刘元晨 两天前也在问，如果时间只允许我做一件事情，那么我会选择做什么。对于我来说这样的问题反而并不难，很快就会有这样的结论：\n\n1. 亲情\n2. Geek精神\n3. 不大方便在这儿说\n\n今天和@果核的宇宙 吃饭聊天，聊到我大学的时候和@licstar 曾一起做过的那些~~风花雪月~~激动人心的事情，回想过去的一段日子，似乎很久都没有做意见让我“耶”出来的事情了。\n\n排除1和3，我想2更适合作为给@刘元晨 的答案。前几天在手机里编辑了一条微博，但并没有发出来，内容是：\n\n**我热爱编程，因为那是一种能让我的生命为之发光的东西，这种情感叫做“燃烧”。**\n\n我也在寻找更多的能让为之燃烧生命的东西，而且我猜我似乎找到了。\n\n最后，感谢@木目言 @iwitness @刺猬一只火火火火 @月人土土 @刘元晨 @*** 为代表的诸位给我的生日祝福。\n\n并感谢每一位耐心读到这里的朋友\n\n2012/8/24","mtime":1398413418000,"source":"_posts/话痨的生日.md"},"7805sn8o5yv6303n":{"_id":"7805sn8o5yv6303n","content":"title: Feedback\nlayout: page\ndate: 2012-03-11 12:37:16\n---\n\n各位看官有什么意见和建议可以到这个页面下面留言\n\n哦也……","mtime":1398413418000,"source":"feedback/index.md"}}}